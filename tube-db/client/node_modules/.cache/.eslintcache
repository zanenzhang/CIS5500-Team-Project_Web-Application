[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/Login.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"5","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"6","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js":"7","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js":"8","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js":"9","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/ChannelsHeader.js":"10","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js":"11","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js":"12","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Navbar.js":"13","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js":"14","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js":"15","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js":"16","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/FinalSearchHeader.js":"17"},{"size":1010,"mtime":1659911584080,"results":"18","hashOfConfig":"19"},{"size":2592,"mtime":1659724067968,"results":"20","hashOfConfig":"19"},{"size":2662,"mtime":1659982381830,"results":"21","hashOfConfig":"19"},{"size":9316,"mtime":1660011081845,"results":"22","hashOfConfig":"19"},{"size":31336,"mtime":1659922109738,"results":"23","hashOfConfig":"19"},{"size":3196,"mtime":1660000781478,"results":"24","hashOfConfig":"19"},{"size":12700,"mtime":1660010969670,"results":"25","hashOfConfig":"19"},{"size":686,"mtime":1659565734960,"results":"26","hashOfConfig":"19"},{"size":205,"mtime":1659299528877,"results":"27","hashOfConfig":"19"},{"size":1488,"mtime":1659917887858,"results":"28","hashOfConfig":"19"},{"size":4513,"mtime":1659665331698,"results":"29","hashOfConfig":"19"},{"size":376,"mtime":1659903503970,"results":"30","hashOfConfig":"19"},{"size":1721,"mtime":1659900425540,"results":"31","hashOfConfig":"19"},{"size":774,"mtime":1659580358224,"results":"32","hashOfConfig":"19"},{"size":943,"mtime":1659916644222,"results":"33","hashOfConfig":"19"},{"size":389,"mtime":1659312132512,"results":"34","hashOfConfig":"19"},{"size":15681,"mtime":1659919513804,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1445w12",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],["80","81"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/Login.js",["82","83","84","85","86"],"import './Login.css';\nimport {gapi} from 'gapi-script';\nimport { useReducer, useEffect, useState } from 'react';\nimport React from 'react';\nimport image from '../images/whatsapp2.webp';\nimport { GoogleLogin } from 'react-google-login';\n\nvar clicked = false;//Global Variable\n\n\nconst CLIENT_ID = \"1034575332123-8tgla9079nd652nlfttj4lmub58up4ke.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyCrG2ljgMyqUl9JS-mdHwrKZbbGscficYo\"\n\nconst formReducer = (state, event) => {\n    return {\n      ...state,\n      [event.target.name]: event.target.value\n    }\n   }\n\nfunction Login() {\n\n    const onSuccess = (googleData) => {\n\n      console.log(googleData.profileObj);\n\n      //https://stackoverflow.com/questions/32182532/google-signin-doesnt-redirect-after-sign-out\n        var auth2 = gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function () {\n          console.log('User signed in.');\n          window.location.href='http://localhost:3000/trendingvideos';\n        })\n\n  }\n\n  const onFailure = (result) => {\n\n    alert(result);\n}\n\n  function clickLogin() {\n\n      clicked=true;}\n\n  const [formData, setFormData] = useReducer(formReducer, {});\n\n  useEffect(() => {\n    function start() {\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientID: CLIENT_ID\n      });\n\n    };\n\n    gapi.load('client: auth', start);\n\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('User signed in.');\n    window.location.href='http://localhost:3000/trendingvideos';\n  };\n\n  return (\n    <div class = \"Login\">\n      \n      <h2 class=\"white-text\">CIS 550 Project: Bug Busters</h2>\n      <p class=\"white-text\">(Derek Taylor, Zan Zhang, Sanjeeva Rajapakse, Angela Fan, Fred Qi)</p>\n      <h3 class=\"white-text\">Login Page</h3>\n      <form onSubmit={handleSubmit}>\n      <fieldset>\n         <label>\n           <h5 class=\"white-text\">Username/Email</h5>\n           <input name=\"Username\" onChange={setFormData} />\n         </label>\n       </fieldset>\n       <fieldset>\n         <label>\n           <h5 class=\"white-text\">Password</h5>\n           <input name=\"Password\" />\n         </label>\n       </fieldset>\n       <button type=\"submit\">Submit</button>\n      </form>\n      <div class='login'>\n      <GoogleLogin\n                id = 'g-login'\n                clientId={CLIENT_ID}\n                buttonText=\"Login with Google\"\n                onSuccess= {onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={false}\n            />\n        </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js",["87","88","89","90","91","92","93","94","95"],"import React from 'react';\nimport SideMenu from '../components/SideMenu';\nimport './VideoPage.css'\nimport { getHomeVideos, getSingleVideo } from '../fetcher'\nimport HeaderBar from '../components/HeaderBar';\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Table,\n  Select\n} from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nclass VideoPage extends React.Component {\n\n      state = {\n        fullLink: \"\",\n        videoInfo: [],\n        videoId: \"\"\n      };\n\n    fetchVideoId = async () => {\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      const videoId = urlParams.get(\"videoid\");\n      this.state.videoId = videoId;\n      var linkBegin = \"https://www.youtube.com/embed/\";\n      this.state.fullLink = linkBegin + `${this.state.videoId}`;\n    };\n  \n    componentDidMount() {\n      this.fetchVideoId();\n      getSingleVideo(this.state.videoId).then(res => {\n        this.setState({ videoInfo: res.results });\n        // const map1 = this.state.videoInfo.map(x=> x.video_title);\n        // var array = JSON.parse(\"[\" + x.video_title + \"]\");\n        // console.log(array);\n      })\n    };\n    \n  \n    render() {\n  \n      return (\n        \n        <div>\n  \n            <div id=\"page\">\n    \n                <div id=\"sideBar\">\n                    <div>\n                    <SideMenu />\n                    </div>\n                </div>\n            \n                <div className=\"videoInfo\">\n\n                  <iframe id=\"videoFrame\" width=\"640\" height=\"360\" \n                      src={this.state.fullLink}>\n                  </iframe>\n\n                  <h2>Title: </h2>\n                  {this.state.videoInfo.map(info => <h5>{info.video_title}</h5>)}\n                  <h2>Description:</h2>\n                  {this.state.videoInfo.map(info => <h5>{info.description.substring(0, 150)}</h5>)}\n                  <h2>Trending Start Date:</h2>\n                  {this.state.videoInfo.map(info => <h5> {info.trend_start.substring(0,10)}</h5>)}\n                  <h2>Countries:</h2>\n                  {this.state.videoInfo.map(info => <h5>  {info.countries}</h5>)}\n                  \n                  <h2>Views:</h2>\n                  {this.state.videoInfo.map(info => <h5> {info.views}</h5>)}\n                  <h2>Likes:</h2>\n                  {this.state.videoInfo.map(info => <h5>{info.likes}</h5>)}\n                  \n    \n                </div>\n            \n            \n            </div>\n        </div>\n      )\n    };\n  \n  }\n  \n  export default VideoPage\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",["96","97","98","99"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["100","101","102"],"import React from 'react';\nimport './TopChannels.css';\nimport TrendingVideoCard from '../components/TrendingVideoCard';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport ChannelsHeader from '../components/ChannelsHeader';\nimport SideMenu from '../components/SideMenu';\nimport { SearchOutlined } from '@ant-design/icons';\n\n//import { FixedSizeList as List } from \"react-window\";\n\nimport {\n    Input,\n    Select,\n    Button,\n    Slider,\n    Table,\n    Row,\n    Col,\n    Divider,\n    Carousel\n} from 'antd'\n\n\n\nimport { getChannel, getFindChannels, getChannelRecentTrending } from '../fetcher'\nimport { Footer } from 'antd/lib/layout/layout';\n\n\nconst { Option } = Select;\nconst { Column, ColumnGroup } = Table;\n\nconst countryData = ['Select','Afghanistan', 'Albania', 'Algeria','Argentina', 'Armenia', 'Australia',\n    'Australian Antarctic Territory', 'Austria', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Belarus', 'Belgium', 'Bolivia', \n    'Bosnia and Herzegovina', 'Brazil', 'Bulgaria', 'Cambodia', 'Canada', 'Chile', 'China', 'Colombia', 'Costa Rica', \n    \"Cote d''Ivoire (Ivory Coast)\", 'Croatia', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Dominican Republic', 'Ecuador', \n    'Egypt', 'El Salvador', 'Europe', 'Finland', 'France', 'Gambia, The', 'Georgia', 'Germany', 'Ghana', 'Global', 'Greece', \n    'Guatemala', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy', 'Jamaica', \n    'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Korea, South', 'Kuwait', 'Kyrgyzstan', 'Latin America', 'Latvia', 'Lebanon', \n    'Lithuania', 'Malaysia', 'Malta', 'Martinique', 'Mexico', 'Middle East', 'Moldova', 'Monaco', 'Morocco', 'Nepal', 'Netherlands', \n    'New Zealand', 'Nicaragua', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Panama', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', \n    'Puerto Rico', 'Qatar', 'Romania', 'Russia', 'Senegal', 'Serbia', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'South Africa', \n    'Spain', 'Sri Lanka', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tanzania', 'Thailand', 'Tunisia', 'Turkey', 'U.S. Virgin Islands', 'Uganda', \n    'Ukraine', 'Unidentified', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Venezuela'];\n\n\nconst languageData = ['Select','Albanian', 'Arabic', 'Armenian', 'Bengali', 'Bhojpuri', 'Bosnian', 'Bulgarian', 'Catalan', 'Chichewa', \n    'Chinese', 'Croatian', 'Czech', 'Dutch', 'English', 'Estonian', 'Filipino', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', \n    'Hindi', 'Hungarian', 'Indian', 'Indonesian', 'Italian', 'Japanese', 'Kannada', 'Korean', 'Malay', 'Malayalam', 'Marathi', 'Nepali', \n    'Norwegian', 'Polish', 'Portuguese', 'Punjabi', 'Romanian', 'Russian', 'Serbian', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', \n    'Swedish', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese'];\n\n\nconst producerData = ['Select', 'Creator', 'Entertainer or Event', 'Entertainer/Event', 'Expert', \n    'Institution', 'Manufacturer', 'Media/Content Brand', 'Retailer', 'Service Provider', 'User'];\n\n\n//add the case that values are negative (test abs. val and append - when negative) //perhaps make a utility.js file \nfunction numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\nfunction growthFormatter(deci){\n    let newNum = deci;\n    newNum*=100;\n    if (newNum>=0){\n        return \"+\" + newNum.toFixed(1) + \"%\";\n    }else{\n        return newNum.toFixed(1) + \"%\";\n    }\n}\n\nconst handleChange = (value) => {\n    console.log(`selected ${value}`);\n  };\n\nclass TopChannelsPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQuery: \"\",\n            channelsQuery: \"\",\n            selectedQueryResults: [],\n            channelsQueryResults: [],\n            selectedTrendingQueryResults: [],\n            selectedChannelDetails: null,\n            searchString: null,\n            country: 'Select',\n            language: 'Select',\n            producer: 'Select',\n            rankingLow: 1,\n            rankingHigh: 10000,\n            viewsLow: 1000000,\n            viewsHigh: 194000000000,\n            subsLow: 100000,\n            subsHigh: 218000000,\n            libSizeLow: 10,\n            libSizeHigh: 50000,\n            viewsPerLow: 100000,\n            viewsPerHigh: 100000000,\n            viewsGrowthLow: -1,\n            viewsGrowthHigh: 1,\n            subsGrowthLow: -1,\n            subsGrowthHigh: 1\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n        this.executeSelectedSearch = this.executeSelectedSearch.bind(this)\n\n        this.handleSearchStringChange = this.handleSearchStringChange.bind(this)\n        this.handleCountryChange = this.handleCountryChange.bind(this)\n        this.handleLanguageChange = this.handleLanguageChange.bind(this)\n        this.handleProducerChange = this.handleProducerChange.bind(this)\n        \n        this.handleRankingChange = this.handleRankingChange.bind(this)\n        this.handleViewsChange = this.handleViewsChange.bind(this)\n        this.handleSubsChange = this.handleSubsChange.bind(this)\n        this.handleLibSizeChange = this.handleLibSizeChange.bind(this)\n        this.handleViewsPerChange = this.handleViewsPerChange.bind(this)\n        this.handleViewsGrowthChange = this.handleViewsGrowthChange.bind(this)\n        this.handleSubsGrowthChange = this.handleSubsGrowthChange.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ selectedQuery: event.target.value })\n    }\n\n    handleSearchStringChange(event){\n        this.setState({searchString: event.target.value})\n    }\n\n    handleCountryChange(value) {\n        this.setState({ country: value})\n    }\n\n\n    handleLanguageChange(value) {\n        this.setState({ language: value})\n    }\n\n\n    handleProducerChange(value) {\n        this.setState({ producer: value})\n    }\n\n    handleRankingChange(value) {\n        this.setState({ rankingLow: value[0] })\n        this.setState({ rankingHigh: value[1] })\n    }\n\n    handleViewsChange(value) {\n        this.setState({ viewsLow: value[0] })\n        this.setState({ viewsHigh: value[1] })\n    }\n\n    handleSubsChange(value) {\n        this.setState({ subsLow: value[0] })\n        this.setState({ subsHigh: value[1] })\n    }\n\n    handleLibSizeChange(value) {\n        this.setState({ libSizeLow: value[0] })\n        this.setState({ libSizeHigh: value[1] })\n    }\n\n    handleViewsPerChange(value) {\n        this.setState({ viewsPerLow: value[0] })\n        this.setState({ viewsPerHigh: value[1] })\n    }\n\n    handleViewsGrowthChange(value) {\n        this.setState({ viewsGrowthLow: value[0] })\n        this.setState({ viewsGrowthHigh: value[1] })\n    }\n\n    handleSubsGrowthChange(value) {\n        this.setState({ subsGrowthLow: value[0] })\n        this.setState({ subsGrowthHigh: value[1] })\n    }\n\n    executeChannelSearch() {\n        getFindChannels(this.state.searchString,this.state.country, this.state.language, this.state.producer, \n                        this.state.rankingLow, this.state.rankingHigh, this.state.viewsLow, this.state.viewsHigh,\n                        this.state.subsLow, this.state.subsHigh, this.state.libSizeLow, this.state.libSizeHigh,\n                        this.state.viewsPerLow, this.state.viewsPerHigh, this.state.viewsGrowthLow, this.state.viewsGrowthHigh,\n                        this.state.subsGrowthLow, this.state.subsGrowthHigh).then(res => {  \n            this.setState({ channelsQueryResults: res.results })\n        })\n    }\n\n    executeSelectedSearch(Ranking) {\n        getChannel(Ranking).then(res => {    // \n            this.setState({ selectedQueryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(Ranking).then(res => {    // \n            this.setState({ selectedTrendingQueryResults: res.results })\n        })\n\n        \n    }\n\n    componentDidMount() {\n\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n\n        getChannel(3430).then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(3430).then(res => {\n            this.setState({ selectedTrendingQueryResults: res.results });\n        })\n    }\n\n    ////////////////////////////////////////////////////\n    // Switch for number of recent trending (up to 5) //\n    ///////////////////////////////////////////////////\n    dynamicCarousel(){\n        switch(this.state.selectedTrendingQueryResults.length){\n            case 1: \n                return <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>;\n            case 2: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            </Carousel>;\n            case 3: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            </Carousel>;\n            case 4: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            </Carousel>;\n            case 5: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n            </Carousel>;\n\n            default: return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n        </Carousel>\n        }\n    }\n\n    render() {\n        return (\n            <div className='rootWrapper'>\n                <ChannelsHeader />\n\n                <div className='page'>\n                    \n                    <div id=\"sideBar\">\n                        <div>\n                            <SideMenu />\n                        </div>\n                    </div>\n\n                    <div className='pageContent'>\n\n                        <div style={{ width: '70vw', margin: '0 auto' }}>\n\n                            <div className='searchMenu'>\n                                \n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Title Includes: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Input value={this.state.searchString} placeholder=\"type here\" onChange={this.handleSearchStringChange}/>\n                                            </Col>\n                                        </Row>\n                                        \n                                    </Col>\n                                    \n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Country: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={countryData[0]} style={{width: 120,}} onChange={this.handleCountryChange}>\n                                                    {countryData.map((country) => (<Option key={country}>{country}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Language: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={languageData[0]} style={{width: 120,}} onChange={this.handleLanguageChange}>\n                                                    {languageData.map((language) => (<Option key={language}>{language}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={12}>\n                                                <p className='titleSearchName'>Producer-Type: </p>\n                                            </Col>\n                                            <Col span={12}>\n                                                <Select defaultValue={producerData[0]} style={{width: 120,}} onChange={this.handleProducerChange}>\n                                                    {producerData.map((producer) => (<Option key={producer}>{producer}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n\n\n                                <Row>\n                                    <Col span={6}>\n\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Rank: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider tipFormatter={numFormatter} range defaultValue={[1, 10000]} \n                                                min={1} max={10000} onChange={this.handleRankingChange}/>\n                                            </Col>\n                                        </Row>\n\n\n\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Views: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={1000000} max={194000000000} defaultValue={[2000000, 194000000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Subs: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={100000} max={218000000} defaultValue={[100000, 218000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleSubsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Lib-Size: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[10, 50000]} min={10} max={50000} \n                                                tipFormatter={numFormatter} onChange={this.handleLibSizeChange}/>\n                                            </Col>\n                                        </Row>   \n                                    </Col>\n\n                                </Row>\n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={12}>\n                                                <p className='titleSearchName'>Views per Video: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[100000, 100000000]} min={100000} max={100000000} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsPerChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>View Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleViewsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>Sub Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleSubsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={2}>\n                                        <Button className='searchIcon' style={{display: 'flex','justify-content': 'center','align-items': 'center', backgroundColor:'#d2001a'}} \n                                        shape=\"circle\" onClick={this.executeChannelSearch} \n                                        icon={<SearchOutlined style={{color:'whiteSmoke', fontSize: '18px','margin-left': 'auto', 'margin-right': 'auto', display: 'block !important'}}/>}></Button>\n                                    </Col>\n                                    \n                                </Row>\n                            </div>\n                            <div className='tableContainer'>\n                                <Table className='channelTable' tableLayout='fixed' onRow={(record, rowIndex) => {\n                                    return {\n                                    onClick: event => {this.executeSelectedSearch(record.Ranking)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                                    };\n                                    }} dataSource={this.state.channelsQueryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                                            \n                                            <Column className='channelTable' title=\"Ranking\" dataIndex=\"Ranking\" key=\"Ranking\" sorter= {(a, b) => a.Ranking-b.Ranking}/>\n                                            <Column title=\"Title\" dataIndex=\"Title\" key=\"Title\" sorter= {(a, b) => a.Title.localeCompare(b.Title)}/>\n                                            <Column title=\"Country\" dataIndex=\"country\" key=\"country\" sorter= {(a, b) => a.country.localeCompare(b.country)}/> {/* Need a way to deal with null here...*/}\n                                            <Column title=\"Language\" dataIndex=\"language\" key=\"language\" sorter= {(a, b) => a.language.localeCompare(b.language)}/>\n                                            \n                                            <ColumnGroup title=\"Viewership\">\n                                                <Column title=\"Subscribers\" dataIndex=\"subscribers\" key=\"subscribers\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.subscribers-b.subscribers}/>\n                                                <Column title=\"Total Views\" dataIndex=\"views\" key=\"views\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.views-b.views}/>\n                                            </ColumnGroup>\n                                </Table>\n                            </div>\n                            \n                        </div>\n\n\n\n                        {/* \n                        /////////////////////////////////////////////////////////////\n                        ////  Selected Channel will display via below structure /////\n                        /////////////////////////////////////////////////////////////\n                                                                                    */}\n                        <Divider />\n                        {this.state.selectedChannelDetails ? \n                        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}> \n                            \n\n                            {/*    START OF SELECTED CHANNEL CONTAINER    */}    \n                            <h1 lex={2} className='selectedChannelName'>{this.state.selectedChannelDetails.channel_title}</h1>\n                                \n                            <Row className='selectedContainer'>\n\n                                {/*    START OF SELECTED CHANNEL STATS SECTION OF CONTAINER   */}    \n                                <Col className='channelStats' span={6}>\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center', margin: '0rem', padding: '0rem'}}>\n                                            <h3 className='statTopTitle'>Channel<br></br>Statistics</h3>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Divider className='cardDivider'/>\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center'}}>\n                                            <h4 className='statSectionTitle'>All Time</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views)}</p>\n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers)}</p>\n                                        </Col>\n                                    </Row>\n\n\n\n                                    <Divider className='cardDivider'/>\n\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center' }}>\n                                        <h4 className='statSectionTitle'>Last 3 Months</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.view_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                    {growthFormatter(this.state.selectedChannelDetails.view_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                            \n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.subscriber_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                {growthFormatter(this.state.selectedChannelDetails.subscriber_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                        </Col>\n                                    </Row>\n\n                                    <Divider className='cardDividerBottom'/>\n\n                                </Col>\n\n                        {/*    START OF TRENDING VIDEO SECTION OF CONTAINER    */}\n                                \n                                <Col className='recentTrendingContainer' span={18}>\n                                    <Row className='trendingVideoSectionTitle'>\n                                        <h3 className='trendingTopTitle'>Most Recent Trending Videos</h3>\n                                    </Row>\n\n                                        {this.state.selectedTrendingQueryResults == null || this.state.selectedTrendingQueryResults.length < 1 ?\n                                        <Row className='noRecentTrends'>\n                                            <h3 className='noRecentTrendsText'>\n                                                No Recently Trending Videos\n                                            </h3>\n                                        </Row>: <Row className='carouselSection'>\n                                                {this.dynamicCarousel()}\n                                            </Row>}\n                                        \n                                    \n                                </Col>\n                            </Row>\n                                \n                            {/* </Container> */}\n                            {/* <Footer></Footer> */}\n                            \n                        </div> : null}\n                        <Divider />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js",["103","104","105","106","107","108","109","110","111"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js",["112","113","114","115","116","117","118","119","120","121"],"import React, {useState} from 'react';\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport Navbar from './Navbar';\nimport HeaderLogo from './HeaderLogo';\n\nimport './SideMenu.css';\n\n\nclass SideMenu extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n    <>\n      <div className=\"navigation\">\n      <Navbar />\n      </div>\n    </>\n     \n    );\n  }\n}\n\nexport default SideMenu;\n\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/ChannelsHeader.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './ChannelsHeader.css';\nimport HeaderLogo from '../components/HeaderLogo';\nimport SearchBar from '../components/SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass ChannelsHeader extends React.Component {\n\n    render(){\n        return(\n          <div className=\"headerBar\">\n\n            <div className=\"headerLogo\">\n                <HeaderLogo />\n            </div>\n\n            <div className=\"headerExLogo\">\n                <h1 className='pageTitle'>Channel Search</h1>\n            </div>\n            \n          </div>\n        )\n    }\n}\n\nexport default ChannelsHeader\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js",["138","139","140"],"import React from \"react\";\nimport \"./TrendingVideoCard.css\";\n\nimport {\n    Row,\n    Col\n} from 'antd'\n\n\n\n\nconst prototype = [{\"title\":\"I’ve Got a Huge Secret Hiding Behind This Fake Office\",\"published\":\"2022-06-15T04:00:00.000Z\",\"video_id\":\"h8g9wfI9nGI\",\"views\":9075972,\"trend_stop\":\"2022-06-18T04:00:00.000Z\",\"trend_start\":\"2022-06-16T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Pranks Destroy Scam Callers- GlitterBomb Payback\",\"published\":\"2022-05-08T04:00:00.000Z\",\"video_id\":\"xsLJZyih3Ac\",\"views\":30868590,\"trend_stop\":\"2022-05-17T04:00:00.000Z\",\"trend_start\":\"2022-05-09T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Robot Piano Catches Fire Playing Rush E (World’s Hardest Song)\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":9185225,\"trend_stop\":\"2022-03-27T04:00:00.000Z\",\"trend_start\":\"2022-03-27T04:00:00.000Z\",\"countries\":\"United Kingdom\"},{\"title\":\"This Piano Speaks English\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":8014045,\"trend_stop\":\"2022-03-26T04:00:00.000Z\",\"trend_start\":\"2022-03-20T04:00:00.000Z\",\"countries\":\"Canada,Germany,United Kingdom,United States\"},{\"title\":\"World's Largest T-Shirt Cannon\",\"published\":\"2021-12-20T05:00:00.000Z\",\"video_id\":\"QiKZYt9070U\",\"views\":6387831,\"trend_stop\":\"2021-12-22T05:00:00.000Z\",\"trend_start\":\"2021-12-21T05:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"}];\n\n\nfunction TrendingVideoCard({data, num}) {\n\n    function numFormatter(num) {\n        if(num >= 1000 && num < 1000000){\n            return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n        }else if(num >= 1000000 && num < 1000000000){\n            return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n        }else if(num >= 1000000000){\n            return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n        }else if(num < 900){\n            return num; // if num < 1000, do nothing\n        }\n    }\n\n    \n\n    let record_data = data;\n    \n    let days = record_data.trend_stop - record_data.trend_stop;\n\n    let countries = \"\";\n\n    if(record_data.countries.includes(\",\")){\n        countries = (record_data.countries).split(\",\").join(\" \");\n    }else{\n        countries = record_data.countries\n    }\n    \n\n    const trend_start = new Date(record_data.trend_start.slice(0,19));\n    const trend_stop = new Date(record_data.trend_stop.slice(0,19));\n\n    const trend_duration_ms = trend_stop.getTime() - trend_start.getTime();\n    let trend_duration_hr = (trend_duration_ms / 3600000).toFixed(0);\n\n    let gradient = \"videoThumbnailSection\"+num;\n\n    if (trend_duration_hr < 24){\n        trend_duration_hr = '< 24'\n    }\n\n    let img_url = \"https://i.ytimg.com/vi/\"+ record_data.video_id + \"/hqdefault.jpg\";\n    let watch_url = '/video?videoid=' + record_data.video_id\n\n\n    return (\n        <div className=\"videoCard\">\n            <Row className='trendingVideoNameSection'>\n                <Col className='trendingVideoNameSection' onClick={watch_url}>\n                    <Row className='videoTitleContainer'>\n                        <h4 className='videoTitle'>{record_data.title}</h4>\n                    </Row>\n                    \n                    <Row>\n                        <Col span={6}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Views:</b> {numFormatter(record_data.views)}</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Trending for:</b> {trend_duration_hr} hours</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Published:</b> {record_data.published.slice(0,10)}</h5>\n                        </Col>\n                    </Row>\n                </Col>\n                \n            </Row>\n            \n            <Row className={gradient}>\n                <Col span={6}>\n                    <h5 className='videoDataCountries'><b className=\"videoDataTitle\">Countries:</b><br></br>{countries}</h5>\n                </Col>\n                <Col span={18}>\n                    <a href={watch_url}><img className='videoTile' src={img_url}/></a>\n                </Col>\n            </Row>\n        </div>\n    );\n }\n\n \n\nexport default TrendingVideoCard;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Navbar.js",["141","142"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport {BsFillPlayBtnFill, BsFillPersonFill, BsBookmarkHeartFill} from 'react-icons/bs';\nimport * as IoIcons from 'react-icons/io';\nimport { MdOutlineOndemandVideo } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nconst SidebarData = [ \n  {\n    title: 'Videos',\n    path: '/trendingvideos',\n    icon: < BsFillPlayBtnFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Channels',\n    path: '/topchannels',\n    icon: < MdOutlineOndemandVideo />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Favorites',\n    path: '/savedvideos',\n    icon: < BsBookmarkHeartFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Logout',\n    path: '/',\n    icon: < BsFillPersonFill />,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Support',\n    path: '/support',\n    icon: <IoIcons.IoMdHelpCircle />,\n    cName: 'nav-text'\n  }\n];\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(true);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navigation'>\n        <nav className='nav-menu'>\n          <ul className='nav-menu-items'>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n        </div>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js",["143","144","145","146","147","148","149","150","151"],"\nimport React, {useState} from 'react';\n\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport TubeDBLogo from '../images/RedLogo.svg';\n\n\n\nclass HeaderLogo extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n      <Nav justified>\n        <div id=\"header\">\n        <div id=\"headerLogo\">\n          <a href=\"./trendingvideos\">\n        <img src={TubeDBLogo} width={180} />\n        </a>\n        </div>\n        </div>\n      </Nav>\n    );\n  }\n}\n\n\nexport default HeaderLogo;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js",["152","153"],"import React from \"react\";\nimport \"./NavbarItem.css\";\nimport navitemLogo from '../images/view-grid@2x.svg';\n\nfunction NavbarItem(props) {\n  const { text, className } = props;\n\n  return (\n    <div className>\n    <div className=\"nav-item\">\n      <img className=\"view-grid\" src={navitemLogo} />\n      <div className=\"text\">{text}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default NavbarItem;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/FinalSearchHeader.js",["154","155","156","157","158","159","160","161","162","163","164","165"],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":3,"column":33,"nodeType":"172","messageId":"173","endLine":3,"endColumn":41},{"ruleId":"170","severity":1,"message":"174","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"175","line":8,"column":5,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"170","severity":1,"message":"176","line":41,"column":12,"nodeType":"172","messageId":"173","endLine":41,"endColumn":22},{"ruleId":"170","severity":1,"message":"177","line":45,"column":10,"nodeType":"172","messageId":"173","endLine":45,"endColumn":18},{"ruleId":"170","severity":1,"message":"178","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":23},{"ruleId":"170","severity":1,"message":"179","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":12},{"ruleId":"170","severity":1,"message":"181","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"170","severity":1,"message":"182","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":19},{"ruleId":"170","severity":1,"message":"183","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":15},{"ruleId":"170","severity":1,"message":"184","line":15,"column":17,"nodeType":"172","messageId":"173","endLine":15,"endColumn":28},{"ruleId":"170","severity":1,"message":"185","line":16,"column":9,"nodeType":"172","messageId":"173","endLine":16,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":63,"column":19,"nodeType":"188","endLine":64,"endColumn":49},{"ruleId":"170","severity":1,"message":"183","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":15},{"ruleId":"170","severity":1,"message":"184","line":15,"column":17,"nodeType":"172","messageId":"173","endLine":15,"endColumn":28},{"ruleId":"170","severity":1,"message":"185","line":16,"column":9,"nodeType":"172","messageId":"173","endLine":16,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":247,"column":75,"nodeType":"188","endLine":247,"endColumn":110},{"ruleId":"170","severity":1,"message":"181","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":22},{"ruleId":"170","severity":1,"message":"191","line":26,"column":10,"nodeType":"172","messageId":"173","endLine":26,"endColumn":16},{"ruleId":"170","severity":1,"message":"192","line":85,"column":7,"nodeType":"172","messageId":"173","endLine":85,"endColumn":19},{"ruleId":"170","severity":1,"message":"193","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"194","line":6,"column":22,"nodeType":"172","messageId":"173","endLine":6,"endColumn":27},{"ruleId":"170","severity":1,"message":"195","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":23},{"ruleId":"170","severity":1,"message":"196","line":7,"column":25,"nodeType":"172","messageId":"173","endLine":7,"endColumn":38},{"ruleId":"170","severity":1,"message":"197","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":24},{"ruleId":"170","severity":1,"message":"183","line":21,"column":9,"nodeType":"172","messageId":"173","endLine":21,"endColumn":15},{"ruleId":"170","severity":1,"message":"184","line":21,"column":17,"nodeType":"172","messageId":"173","endLine":21,"endColumn":28},{"ruleId":"170","severity":1,"message":"198","line":33,"column":7,"nodeType":"172","messageId":"173","endLine":33,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":311,"column":79,"nodeType":"188","endLine":311,"endColumn":121},{"ruleId":"170","severity":1,"message":"171","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":24},{"ruleId":"170","severity":1,"message":"199","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"200","line":2,"column":28,"nodeType":"172","messageId":"173","endLine":2,"endColumn":40},{"ruleId":"170","severity":1,"message":"201","line":2,"column":42,"nodeType":"172","messageId":"173","endLine":2,"endColumn":57},{"ruleId":"170","severity":1,"message":"202","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"203","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":13},{"ruleId":"170","severity":1,"message":"204","line":4,"column":15,"nodeType":"172","messageId":"173","endLine":4,"endColumn":22},{"ruleId":"170","severity":1,"message":"205","line":4,"column":24,"nodeType":"172","messageId":"173","endLine":4,"endColumn":31},{"ruleId":"170","severity":1,"message":"206","line":5,"column":9,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"207","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"194","line":6,"column":22,"nodeType":"172","messageId":"173","endLine":6,"endColumn":27},{"ruleId":"170","severity":1,"message":"208","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"209","line":7,"column":16,"nodeType":"172","messageId":"173","endLine":7,"endColumn":25},{"ruleId":"170","severity":1,"message":"210","line":7,"column":27,"nodeType":"172","messageId":"173","endLine":7,"endColumn":36},{"ruleId":"170","severity":1,"message":"211","line":7,"column":38,"nodeType":"172","messageId":"173","endLine":7,"endColumn":44},{"ruleId":"170","severity":1,"message":"212","line":7,"column":46,"nodeType":"172","messageId":"173","endLine":7,"endColumn":50},{"ruleId":"170","severity":1,"message":"213","line":7,"column":52,"nodeType":"172","messageId":"173","endLine":7,"endColumn":60},{"ruleId":"170","severity":1,"message":"214","line":7,"column":62,"nodeType":"172","messageId":"173","endLine":7,"endColumn":71},{"ruleId":"170","severity":1,"message":"215","line":7,"column":73,"nodeType":"172","messageId":"173","endLine":7,"endColumn":81},{"ruleId":"170","severity":1,"message":"216","line":11,"column":5,"nodeType":"172","messageId":"173","endLine":11,"endColumn":15},{"ruleId":"170","severity":1,"message":"183","line":16,"column":9,"nodeType":"172","messageId":"173","endLine":16,"endColumn":15},{"ruleId":"170","severity":1,"message":"184","line":16,"column":17,"nodeType":"172","messageId":"173","endLine":16,"endColumn":28},{"ruleId":"170","severity":1,"message":"185","line":17,"column":9,"nodeType":"172","messageId":"173","endLine":17,"endColumn":15},{"ruleId":"170","severity":1,"message":"217","line":18,"column":9,"nodeType":"172","messageId":"173","endLine":18,"endColumn":20},{"ruleId":"170","severity":1,"message":"218","line":20,"column":7,"nodeType":"172","messageId":"173","endLine":20,"endColumn":17},{"ruleId":"170","severity":1,"message":"219","line":12,"column":7,"nodeType":"172","messageId":"173","endLine":12,"endColumn":16},{"ruleId":"170","severity":1,"message":"220","line":33,"column":9,"nodeType":"172","messageId":"173","endLine":33,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":88,"column":41,"nodeType":"188","endLine":88,"endColumn":83},{"ruleId":"170","severity":1,"message":"221","line":2,"column":13,"nodeType":"172","messageId":"173","endLine":2,"endColumn":20},{"ruleId":"170","severity":1,"message":"222","line":47,"column":9,"nodeType":"172","messageId":"173","endLine":47,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":24},{"ruleId":"170","severity":1,"message":"199","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":26},{"ruleId":"170","severity":1,"message":"200","line":4,"column":28,"nodeType":"172","messageId":"173","endLine":4,"endColumn":40},{"ruleId":"170","severity":1,"message":"201","line":4,"column":42,"nodeType":"172","messageId":"173","endLine":4,"endColumn":57},{"ruleId":"170","severity":1,"message":"202","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"170","severity":1,"message":"204","line":6,"column":15,"nodeType":"172","messageId":"173","endLine":6,"endColumn":22},{"ruleId":"170","severity":1,"message":"205","line":6,"column":24,"nodeType":"172","messageId":"173","endLine":6,"endColumn":31},{"ruleId":"170","severity":1,"message":"206","line":7,"column":9,"nodeType":"172","messageId":"173","endLine":7,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":30,"column":9,"nodeType":"188","endLine":30,"endColumn":45},{"ruleId":"170","severity":1,"message":"223","line":6,"column":17,"nodeType":"172","messageId":"173","endLine":6,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":11,"column":7,"nodeType":"188","endLine":11,"endColumn":54},{"ruleId":"170","severity":1,"message":"224","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":16},{"ruleId":"170","severity":1,"message":"225","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"179","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":12},{"ruleId":"170","severity":1,"message":"181","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":22},{"ruleId":"170","severity":1,"message":"226","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"227","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":20},{"ruleId":"170","severity":1,"message":"228","line":8,"column":39,"nodeType":"172","messageId":"173","endLine":8,"endColumn":63},{"ruleId":"170","severity":1,"message":"229","line":19,"column":5,"nodeType":"172","messageId":"173","endLine":19,"endColumn":12},{"ruleId":"170","severity":1,"message":"183","line":22,"column":11,"nodeType":"172","messageId":"173","endLine":22,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":22,"column":19,"nodeType":"172","messageId":"173","endLine":22,"endColumn":30},{"ruleId":"170","severity":1,"message":"230","line":25,"column":9,"nodeType":"172","messageId":"173","endLine":25,"endColumn":20},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'image' is defined but never used.","'clicked' is assigned a value but never used.","'clickLogin' is defined but never used.","'formData' is assigned a value but never used.","'getHomeVideos' is defined but never used.","'HeaderBar' is defined but never used.","'Grid' is defined but never used.","'VideoThumbnail' is defined but never used.","'useParams' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Footer' is defined but never used.","'handleChange' is assigned a value but never used.","'SearchBar' is defined but never used.","'Space' is defined but never used.","'FrownOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'customFormat' is assigned a value but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'NavbarItem' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'HeaderLogo' is defined but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Pagination' is defined but never used.","'RangePicker' is assigned a value but never used.","'IconSlider' is assigned a value but never used.","'prototype' is assigned a value but never used.","'days' is assigned a value but never used.","'FaIcons' is defined but never used.","'showSidebar' is assigned a value but never used.","'className' is assigned a value but never used.","'SideMenu' is defined but never used.","'getTrendingVideos' is defined but never used.","'Navbar' is defined but never used.","'getChannel' is defined but never used.","'getChannelRecentTrending' is defined but never used.","'Divider' is defined but never used.","'countryData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]