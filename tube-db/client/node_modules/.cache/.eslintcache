[{"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/index.js":"1","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/SavedVideos.js":"2","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/Login.js":"3","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/VideoPage.js":"4","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/TopChannelsPage.js":"5","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/TrendingVideosPage.js":"6","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/fetcher.js":"7","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/HeaderBar.js":"8","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/HeaderLogo.js":"9","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/LikeButton.js":"10","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/Navbar.js":"11","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/ChannelsHeader.js":"12","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/SideMenu.js":"13","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/TrendingVideoCard.js":"14","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/Grid.js":"15","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/VideoThumbnail.js":"16","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/SearchBar.js":"17","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/NavbarItem.js":"18","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/FavoritedVideos.js":"19","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/FavoritedHeader.js":"20"},{"size":1311,"mtime":1660156087535,"results":"21","hashOfConfig":"22"},{"size":4865,"mtime":1660234325648,"results":"23","hashOfConfig":"22"},{"size":2963,"mtime":1660147453458,"results":"24","hashOfConfig":"22"},{"size":3760,"mtime":1660233028762,"results":"25","hashOfConfig":"22"},{"size":31336,"mtime":1659659218631,"results":"26","hashOfConfig":"22"},{"size":10626,"mtime":1660172724129,"results":"27","hashOfConfig":"22"},{"size":4525,"mtime":1660233644153,"results":"28","hashOfConfig":"22"},{"size":13603,"mtime":1660058918347,"results":"29","hashOfConfig":"22"},{"size":774,"mtime":1659583781567,"results":"30","hashOfConfig":"22"},{"size":1582,"mtime":1660233176055,"results":"31","hashOfConfig":"22"},{"size":1869,"mtime":1660152569776,"results":"32","hashOfConfig":"22"},{"size":1488,"mtime":1659583781567,"results":"33","hashOfConfig":"22"},{"size":686,"mtime":1659583781568,"results":"34","hashOfConfig":"22"},{"size":4513,"mtime":1659659218629,"results":"35","hashOfConfig":"22"},{"size":205,"mtime":1659583781567,"results":"36","hashOfConfig":"22"},{"size":376,"mtime":1659973171274,"results":"37","hashOfConfig":"22"},{"size":943,"mtime":1659583781568,"results":"38","hashOfConfig":"22"},{"size":389,"mtime":1659583781567,"results":"39","hashOfConfig":"22"},{"size":1856,"mtime":1660186236047,"results":"40","hashOfConfig":"22"},{"size":1469,"mtime":1660157821651,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1fd1lkh",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/index.js",[],["96","97"],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/SavedVideos.js",["98","99","100","101","102","103","104","105","106"],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/Login.js",["107","108","109","110"],"import './Login.css';\nimport {gapi} from 'gapi-script';\nimport { useReducer, useEffect, useState } from 'react';\nimport React from 'react';\nimport image from '../images/whatsapp2.webp';\nimport { GoogleLogin } from 'react-google-login';\n\nvar clicked = false;//Global Variable\n\nconst CLIENT_ID = \"1034575332123-8tgla9079nd652nlfttj4lmub58up4ke.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyCrG2ljgMyqUl9JS-mdHwrKZbbGscficYo\"\n\n\nfunction Login() {\n\n  const [userName, setUserName] = useState('');\n  const [passWord, setPassword] = useState('');\n\n  const onSuccess = (googleData) => {\n\n    sessionStorage.setItem('userInfo', googleData.profileObj.email);\n    var user = sessionStorage.getItem('userInfo');\n\n    console.log(user);\n\n    //https://stackoverflow.com/questions/32182532/google-signin-doesnt-redirect-after-sign-out\n      var auth2 = gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed in.');\n        window.location.href='http://localhost:3000/trendingvideos';\n      })\n\n  }\n\n  const onFailure = (result) => {\n\n    alert(result);\n\n  }\n\n  useEffect(() => {\n\n    function start() {\n\n      sessionStorage.removeItem('userInfo');\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientID: CLIENT_ID\n      });\n\n    };\n\n    gapi.load('client: auth', start);\n\n  });\n\n  const handleSubmit = event => {\n\n    event.preventDefault();\n\n    //Get input values on Form submit in React\n    //https://bobbyhadz.com/blog/react-get-form-input-value-on-submit#:~:text=To%20get%20input%20values%20on,fields%20in%20your%20handleSubmit%20function.\n    sessionStorage.setItem('userInfo', userName);\n    var user = sessionStorage.getItem('userInfo');\n\n    console.log(user);\n\n    window.location.href='http://localhost:3000/trendingvideos';\n\n  };\n\n  return (\n    <div class = \"Login\">\n      \n      <h2 class=\"white-text\">CIS 550 Project: Bug Busters</h2>\n      <p class=\"white-text\">(Derek Taylor, Zan Zhang, Sanjeeva Rajapakse, Angela Fan, Fred Qi)</p>\n      <h3 class=\"white-text\">Login Page</h3>\n      <form onSubmit={handleSubmit}>\n      <fieldset>\n         <label>\n           <h5 class=\"white-text\">Username/Email</h5>\n           <input name=\"Username\" onChange={event => setUserName(event.target.value)} />\n         </label>\n       </fieldset>\n       <fieldset>\n         <label>\n           <h5 class=\"white-text\">Password</h5>\n           <input name=\"Password\" onChange={event => setPassword(event.target.value)} />\n         </label>\n       </fieldset>\n       <button type=\"submit\">Submit</button>\n      </form>\n      <div class='login'>\n      <GoogleLogin\n                id = 'g-login'\n                clientId={CLIENT_ID}\n                buttonText=\"Login with Google\"\n                onSuccess= {onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={false}\n            />\n        </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/VideoPage.js",["111","112","113","114","115","116","117","118","119","120"],"import React from 'react';\nimport SideMenu from '../components/SideMenu';\nimport './VideoPage.css'\nimport { getHomeVideos, getSingleVideo } from '../fetcher'\nimport HeaderBar from '../components/HeaderBar';\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport { useParams } from 'react-router-dom';\nimport HeaderLogo from '../components/HeaderLogo';\nimport LikeButton from '../components/LikeButton';\n\nimport {\n  Table,\n  Select\n} from 'antd'\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nclass VideoPage extends React.Component {\n\n      state = {\n        fullLink: \"\",\n        videoInfo: [],\n        videoId: \"\"\n      };\n    \n    fetchVideoId = async () => {\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      const videoId = urlParams.get(\"videoid\");\n      this.state.videoId = videoId;\n      var linkBegin = \"https://www.youtube.com/embed/\";\n      this.state.fullLink = linkBegin + `${this.state.videoId}`;\n      window.localStorage.setItem('link', this.state.fullLink)\n    };\n  \n    componentDidMount() {\n      this.fetchVideoId();\n      getSingleVideo(this.state.videoId).then(res => {\n        this.setState({ videoInfo: res.results });\n        // const map1 = this.state.videoInfo.map(x=> x.video_title);\n        // var array = JSON.parse(\"[\" + x.video_title + \"]\");\n        // console.log(array);\n      })\n    };\n\n    \n  \n   \n    render() {\n  \n      return (\n        \n        <div>\n              <div className=\"headerBar\">\n            <div className=\"headerLogo\">\n              <HeaderLogo />\n            </div>\n            <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh', marginBottom: '5vh' }}>\n              <h1 id=\"videoPageTitle\">Video Details</h1>\n              </div>\n            </div>\n  \n            <div id=\"page\">\n    \n                <div id=\"sideBar\">\n                    <div>\n                    <SideMenu />\n                    </div>\n                </div>\n            \n                <div className=\"videoInfo\">\n\n                  <iframe id=\"videoFrame\" width=\"640\" height=\"360\" \n                      src={this.state.fullLink}>\n                  </iframe>\n\n                  <h2>Title: </h2>\n                  {this.state.videoInfo.map(info => <h5>{info.video_title}</h5>)}\n                  <h2>Description:</h2>\n                  {this.state.videoInfo.map(info => <h5>{info.description.substring(0, 150)}</h5>)}\n                  <h2>Trending Start Date:</h2>\n                  {this.state.videoInfo.map(info => <h5> {info.trend_start.substring(0,10)}</h5>)}\n                  <h2>Countries:</h2>\n                  {this.state.videoInfo.map(info => <h5>  {info.countries}</h5>)}\n                  \n                  <h2>Views:</h2>\n                  {this.state.videoInfo.map(info => <h5> {info.views}</h5>)}\n                  <h2>Likes:</h2>\n                  {this.state.videoInfo.map(info => <h5>{info.likes}</h5>)}\n                \n                  <div id=\"likeButton\">\n                  <div>\n                  {this.state.videoInfo.map(info=>(\n                    <LikeButton\n                      thumbLink = {info.thumbnail_link}\n                      videoId = {info.video_id}\n                      videoTitle = {info.video_title}\n                    />\n                  ))}\n                  </div>\n                </div>\n                    \n                </div>\n            \n            \n            </div>\n        </div>\n      )\n    };\n  \n  }\n  \n \n  export default VideoPage;\n\n\nlet Likecomment = `div id=\"LikeButton\">\n                      <div>\n                      <LikeButton />\n                      </div>\n                  </div>\n                  `","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/TopChannelsPage.js",["121","122","123"],"import React from 'react';\nimport './TopChannels.css';\nimport TrendingVideoCard from '../components/TrendingVideoCard';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport ChannelsHeader from '../components/ChannelsHeader';\nimport SideMenu from '../components/SideMenu';\nimport { SearchOutlined } from '@ant-design/icons';\n\n//import { FixedSizeList as List } from \"react-window\";\n\nimport {\n    Input,\n    Select,\n    Button,\n    Slider,\n    Table,\n    Row,\n    Col,\n    Divider,\n    Carousel\n} from 'antd'\n\n\n\nimport { getChannel, getFindChannels, getChannelRecentTrending } from '../fetcher'\nimport { Footer } from 'antd/lib/layout/layout';\n\n\nconst { Option } = Select;\nconst { Column, ColumnGroup } = Table;\n\nconst countryData = ['Select','Afghanistan', 'Albania', 'Algeria','Argentina', 'Armenia', 'Australia',\n    'Australian Antarctic Territory', 'Austria', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Belarus', 'Belgium', 'Bolivia', \n    'Bosnia and Herzegovina', 'Brazil', 'Bulgaria', 'Cambodia', 'Canada', 'Chile', 'China', 'Colombia', 'Costa Rica', \n    \"Cote d''Ivoire (Ivory Coast)\", 'Croatia', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Dominican Republic', 'Ecuador', \n    'Egypt', 'El Salvador', 'Europe', 'Finland', 'France', 'Gambia, The', 'Georgia', 'Germany', 'Ghana', 'Global', 'Greece', \n    'Guatemala', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy', 'Jamaica', \n    'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Korea, South', 'Kuwait', 'Kyrgyzstan', 'Latin America', 'Latvia', 'Lebanon', \n    'Lithuania', 'Malaysia', 'Malta', 'Martinique', 'Mexico', 'Middle East', 'Moldova', 'Monaco', 'Morocco', 'Nepal', 'Netherlands', \n    'New Zealand', 'Nicaragua', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Panama', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', \n    'Puerto Rico', 'Qatar', 'Romania', 'Russia', 'Senegal', 'Serbia', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'South Africa', \n    'Spain', 'Sri Lanka', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tanzania', 'Thailand', 'Tunisia', 'Turkey', 'U.S. Virgin Islands', 'Uganda', \n    'Ukraine', 'Unidentified', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Venezuela'];\n\n\nconst languageData = ['Select','Albanian', 'Arabic', 'Armenian', 'Bengali', 'Bhojpuri', 'Bosnian', 'Bulgarian', 'Catalan', 'Chichewa', \n    'Chinese', 'Croatian', 'Czech', 'Dutch', 'English', 'Estonian', 'Filipino', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', \n    'Hindi', 'Hungarian', 'Indian', 'Indonesian', 'Italian', 'Japanese', 'Kannada', 'Korean', 'Malay', 'Malayalam', 'Marathi', 'Nepali', \n    'Norwegian', 'Polish', 'Portuguese', 'Punjabi', 'Romanian', 'Russian', 'Serbian', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', \n    'Swedish', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese'];\n\n\nconst producerData = ['Select', 'Creator', 'Entertainer or Event', 'Entertainer/Event', 'Expert', \n    'Institution', 'Manufacturer', 'Media/Content Brand', 'Retailer', 'Service Provider', 'User'];\n\n\n//add the case that values are negative (test abs. val and append - when negative) //perhaps make a utility.js file \nfunction numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\nfunction growthFormatter(deci){\n    let newNum = deci;\n    newNum*=100;\n    if (newNum>=0){\n        return \"+\" + newNum.toFixed(1) + \"%\";\n    }else{\n        return newNum.toFixed(1) + \"%\";\n    }\n}\n\nconst handleChange = (value) => {\n    console.log(`selected ${value}`);\n  };\n\nclass TopChannelsPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQuery: \"\",\n            channelsQuery: \"\",\n            selectedQueryResults: [],\n            channelsQueryResults: [],\n            selectedTrendingQueryResults: [],\n            selectedChannelDetails: null,\n            searchString: null,\n            country: 'Select',\n            language: 'Select',\n            producer: 'Select',\n            rankingLow: 1,\n            rankingHigh: 10000,\n            viewsLow: 1000000,\n            viewsHigh: 194000000000,\n            subsLow: 100000,\n            subsHigh: 218000000,\n            libSizeLow: 10,\n            libSizeHigh: 50000,\n            viewsPerLow: 100000,\n            viewsPerHigh: 100000000,\n            viewsGrowthLow: -1,\n            viewsGrowthHigh: 1,\n            subsGrowthLow: -1,\n            subsGrowthHigh: 1\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n        this.executeSelectedSearch = this.executeSelectedSearch.bind(this)\n\n        this.handleSearchStringChange = this.handleSearchStringChange.bind(this)\n        this.handleCountryChange = this.handleCountryChange.bind(this)\n        this.handleLanguageChange = this.handleLanguageChange.bind(this)\n        this.handleProducerChange = this.handleProducerChange.bind(this)\n        \n        this.handleRankingChange = this.handleRankingChange.bind(this)\n        this.handleViewsChange = this.handleViewsChange.bind(this)\n        this.handleSubsChange = this.handleSubsChange.bind(this)\n        this.handleLibSizeChange = this.handleLibSizeChange.bind(this)\n        this.handleViewsPerChange = this.handleViewsPerChange.bind(this)\n        this.handleViewsGrowthChange = this.handleViewsGrowthChange.bind(this)\n        this.handleSubsGrowthChange = this.handleSubsGrowthChange.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ selectedQuery: event.target.value })\n    }\n\n    handleSearchStringChange(event){\n        this.setState({searchString: event.target.value})\n    }\n\n    handleCountryChange(value) {\n        this.setState({ country: value})\n    }\n\n\n    handleLanguageChange(value) {\n        this.setState({ language: value})\n    }\n\n\n    handleProducerChange(value) {\n        this.setState({ producer: value})\n    }\n\n    handleRankingChange(value) {\n        this.setState({ rankingLow: value[0] })\n        this.setState({ rankingHigh: value[1] })\n    }\n\n    handleViewsChange(value) {\n        this.setState({ viewsLow: value[0] })\n        this.setState({ viewsHigh: value[1] })\n    }\n\n    handleSubsChange(value) {\n        this.setState({ subsLow: value[0] })\n        this.setState({ subsHigh: value[1] })\n    }\n\n    handleLibSizeChange(value) {\n        this.setState({ libSizeLow: value[0] })\n        this.setState({ libSizeHigh: value[1] })\n    }\n\n    handleViewsPerChange(value) {\n        this.setState({ viewsPerLow: value[0] })\n        this.setState({ viewsPerHigh: value[1] })\n    }\n\n    handleViewsGrowthChange(value) {\n        this.setState({ viewsGrowthLow: value[0] })\n        this.setState({ viewsGrowthHigh: value[1] })\n    }\n\n    handleSubsGrowthChange(value) {\n        this.setState({ subsGrowthLow: value[0] })\n        this.setState({ subsGrowthHigh: value[1] })\n    }\n\n    executeChannelSearch() {\n        getFindChannels(this.state.searchString,this.state.country, this.state.language, this.state.producer, \n                        this.state.rankingLow, this.state.rankingHigh, this.state.viewsLow, this.state.viewsHigh,\n                        this.state.subsLow, this.state.subsHigh, this.state.libSizeLow, this.state.libSizeHigh,\n                        this.state.viewsPerLow, this.state.viewsPerHigh, this.state.viewsGrowthLow, this.state.viewsGrowthHigh,\n                        this.state.subsGrowthLow, this.state.subsGrowthHigh).then(res => {  \n            this.setState({ channelsQueryResults: res.results })\n        })\n    }\n\n    executeSelectedSearch(Ranking) {\n        getChannel(Ranking).then(res => {    // \n            this.setState({ selectedQueryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(Ranking).then(res => {    // \n            this.setState({ selectedTrendingQueryResults: res.results })\n        })\n\n        \n    }\n\n    componentDidMount() {\n\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n\n        getChannel(3430).then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(3430).then(res => {\n            this.setState({ selectedTrendingQueryResults: res.results });\n        })\n    }\n\n    ////////////////////////////////////////////////////\n    // Switch for number of recent trending (up to 5) //\n    ///////////////////////////////////////////////////\n    dynamicCarousel(){\n        switch(this.state.selectedTrendingQueryResults.length){\n            case 1: \n                return <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>;\n            case 2: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            </Carousel>;\n            case 3: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            </Carousel>;\n            case 4: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            </Carousel>;\n            case 5: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n            </Carousel>;\n\n            default: return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n        </Carousel>\n        }\n    }\n\n    render() {\n        return (\n            <div className='rootWrapper'>\n                <ChannelsHeader />\n\n                <div className='page'>\n                    \n                    <div id=\"sideBar\">\n                        <div>\n                            <SideMenu />\n                        </div>\n                    </div>\n\n                    <div className='pageContent'>\n\n                        <div style={{ width: '70vw', margin: '0 auto' }}>\n\n                            <div className='searchMenu'>\n                                \n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Title Includes: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Input value={this.state.searchString} placeholder=\"type here\" onChange={this.handleSearchStringChange}/>\n                                            </Col>\n                                        </Row>\n                                        \n                                    </Col>\n                                    \n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Country: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={countryData[0]} style={{width: 120,}} onChange={this.handleCountryChange}>\n                                                    {countryData.map((country) => (<Option key={country}>{country}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Language: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={languageData[0]} style={{width: 120,}} onChange={this.handleLanguageChange}>\n                                                    {languageData.map((language) => (<Option key={language}>{language}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={12}>\n                                                <p className='titleSearchName'>Producer-Type: </p>\n                                            </Col>\n                                            <Col span={12}>\n                                                <Select defaultValue={producerData[0]} style={{width: 120,}} onChange={this.handleProducerChange}>\n                                                    {producerData.map((producer) => (<Option key={producer}>{producer}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n\n\n                                <Row>\n                                    <Col span={6}>\n\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Rank: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider tipFormatter={numFormatter} range defaultValue={[1, 10000]} \n                                                min={1} max={10000} onChange={this.handleRankingChange}/>\n                                            </Col>\n                                        </Row>\n\n\n\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Views: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={1000000} max={194000000000} defaultValue={[2000000, 194000000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Subs: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={100000} max={218000000} defaultValue={[100000, 218000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleSubsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Lib-Size: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[10, 50000]} min={10} max={50000} \n                                                tipFormatter={numFormatter} onChange={this.handleLibSizeChange}/>\n                                            </Col>\n                                        </Row>   \n                                    </Col>\n\n                                </Row>\n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={12}>\n                                                <p className='titleSearchName'>Views per Video: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[100000, 100000000]} min={100000} max={100000000} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsPerChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>View Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleViewsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>Sub Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleSubsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={2}>\n                                        <Button className='searchIcon' style={{display: 'flex','justify-content': 'center','align-items': 'center', backgroundColor:'#d2001a'}} \n                                        shape=\"circle\" onClick={this.executeChannelSearch} \n                                        icon={<SearchOutlined style={{color:'whiteSmoke', fontSize: '18px','margin-left': 'auto', 'margin-right': 'auto', display: 'block !important'}}/>}></Button>\n                                    </Col>\n                                    \n                                </Row>\n                            </div>\n                            <div className='tableContainer'>\n                                <Table className='channelTable' tableLayout='fixed' onRow={(record, rowIndex) => {\n                                    return {\n                                    onClick: event => {this.executeSelectedSearch(record.Ranking)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                                    };\n                                    }} dataSource={this.state.channelsQueryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                                            \n                                            <Column className='channelTable' title=\"Ranking\" dataIndex=\"Ranking\" key=\"Ranking\" sorter= {(a, b) => a.Ranking-b.Ranking}/>\n                                            <Column title=\"Title\" dataIndex=\"Title\" key=\"Title\" sorter= {(a, b) => a.Title.localeCompare(b.Title)}/>\n                                            <Column title=\"Country\" dataIndex=\"country\" key=\"country\" sorter= {(a, b) => a.country.localeCompare(b.country)}/> {/* Need a way to deal with null here...*/}\n                                            <Column title=\"Language\" dataIndex=\"language\" key=\"language\" sorter= {(a, b) => a.language.localeCompare(b.language)}/>\n                                            \n                                            <ColumnGroup title=\"Viewership\">\n                                                <Column title=\"Subscribers\" dataIndex=\"subscribers\" key=\"subscribers\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.subscribers-b.subscribers}/>\n                                                <Column title=\"Total Views\" dataIndex=\"views\" key=\"views\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.views-b.views}/>\n                                            </ColumnGroup>\n                                </Table>\n                            </div>\n                            \n                        </div>\n\n\n\n                        {/* \n                        /////////////////////////////////////////////////////////////\n                        ////  Selected Channel will display via below structure /////\n                        /////////////////////////////////////////////////////////////\n                                                                                    */}\n                        <Divider />\n                        {this.state.selectedChannelDetails ? \n                        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}> \n                            \n\n                            {/*    START OF SELECTED CHANNEL CONTAINER    */}    \n                            <h1 lex={2} className='selectedChannelName'>{this.state.selectedChannelDetails.channel_title}</h1>\n                                \n                            <Row className='selectedContainer'>\n\n                                {/*    START OF SELECTED CHANNEL STATS SECTION OF CONTAINER   */}    \n                                <Col className='channelStats' span={6}>\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center', margin: '0rem', padding: '0rem'}}>\n                                            <h3 className='statTopTitle'>Channel<br></br>Statistics</h3>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Divider className='cardDivider'/>\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center'}}>\n                                            <h4 className='statSectionTitle'>All Time</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views)}</p>\n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers)}</p>\n                                        </Col>\n                                    </Row>\n\n\n\n                                    <Divider className='cardDivider'/>\n\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center' }}>\n                                        <h4 className='statSectionTitle'>Last 3 Months</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.view_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                    {growthFormatter(this.state.selectedChannelDetails.view_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                            \n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.subscriber_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                {growthFormatter(this.state.selectedChannelDetails.subscriber_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                        </Col>\n                                    </Row>\n\n                                    <Divider className='cardDividerBottom'/>\n\n                                </Col>\n\n                        {/*    START OF TRENDING VIDEO SECTION OF CONTAINER    */}\n                                \n                                <Col className='recentTrendingContainer' span={18}>\n                                    <Row className='trendingVideoSectionTitle'>\n                                        <h3 className='trendingTopTitle'>Most Recent Trending Videos</h3>\n                                    </Row>\n\n                                        {this.state.selectedTrendingQueryResults == null || this.state.selectedTrendingQueryResults.length < 1 ?\n                                        <Row className='noRecentTrends'>\n                                            <h3 className='noRecentTrendsText'>\n                                                No Recently Trending Videos\n                                            </h3>\n                                        </Row>: <Row className='carouselSection'>\n                                                {this.dynamicCarousel()}\n                                            </Row>}\n                                        \n                                    \n                                </Col>\n                            </Row>\n                                \n                            {/* </Container> */}\n                            {/* <Footer></Footer> */}\n                            \n                        </div> : null}\n                        <Divider />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/TrendingVideosPage.js",["124","125","126","127","128"],"import React from 'react';\nimport './TrendingVideosPage.css'\nimport HeaderBar from '../components/HeaderBar';\nimport { getTrendingVideos } from '../fetcher'\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport Navbar from '../components/Navbar';\nimport loadIcon from '../images/load-icon.png';\n\nimport {\n  Table,\n  Select,\n} from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n/*\nconst videoDetails = [\n  //title, trending_date, likes, thumbnail_link\n  {\n    title: 'Video Title',\n    dataIndex: 'title',\n    key: '1',\n    sorter: (a, b) => a.title.localeCompare(b.title),\n  },\n  {\n    title: 'Trending Date',\n    dataIndex: 'trending_date',\n    key: '2',\n    sorter: (a, b) => a.trending_date.localeCompare(b.trending_date)\n  },\n  {\n    title: 'Likes',\n    dataIndex: 'likes',\n    key: '3',\n    sorter: (a, b) => a.likes.localeCompare(b.likes)\n  },\n  {\n    title: 'Picture Thumbnail',\n    dataIndex: 'thumbnail_link',\n    key: '4'\n  }\n];\n*/\n\n\nclass TrendingVideosPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchTerm: \"\",\n      videoResults: [],\n      pageCount: 1,\n      loadLimit: 2,\n      offset: this.getRandomOffset(),\n      country: \"United States\",\n      trendStart: \"\",\n      trendStop: \"\",\n      publishStart: \"\",\n      publishStop: \"\",\n\n      videoTitleString: \"\",\n      channelTitleString: \"\",\n      tagString: \"\",\n      channelLanguage: \"\",\n      categoryString: \"\",\n\n      viewsLow: 0,\n      viewsHigh: 0,\n      likesLow: 0,\n      likesHigh: 0,\n      dislikesLow: 0,\n      dislikesHigh: 0,\n      commentsLow: 0,\n      commentsHigh: 0,\n      subscribersLow: 0,\n      subscribersHigh: 0,\n      libraryLow: 0,\n      libraryHigh: 0\n    }\n\n    this.handleMorePages = this.handleMorePages.bind(this)\n    this.handleUpdateVideos = this.handleUpdateVideos.bind(this)\n    this.handleCountryChange = this.handleCountryChange.bind(this)\n    this.handleLanguageChange = this.handleLanguageChange.bind(this)\n    this.removeOffsetAndUpdate = this.removeOffsetAndUpdate.bind(this)\n\n    this.handleUpdateTrendStart = this.handleUpdateTrendStart.bind(this)\n    this.handleUpdateTrendStop = this.handleUpdateTrendStop.bind(this)\n    this.handleUpdatePublishStart = this.handleUpdatePublishStart.bind(this)\n    this.handleUpdatePublishStop = this.handleUpdatePublishStop.bind(this)\n\n    this.handleVideoTitleString = this.handleVideoTitleString.bind(this)\n    this.handleChannelTitleString = this.handleChannelTitleString.bind(this)\n    this.handleTagString = this.handleTagString.bind(this)\n    this.handleCategoryString = this.handleCategoryString.bind(this)\n\n    this.handleUpdateLikesLow = this.handleUpdateLikesLow.bind(this)\n    this.handleUpdateLikesHigh = this.handleUpdateLikesHigh.bind(this)\n    this.handleUpdateDislikesLow = this.handleUpdateDislikesLow.bind(this)\n    this.handleUpdateDislikesHigh = this.handleUpdateDislikesHigh.bind(this)\n    this.handleUpdateViewsLow = this.handleUpdateViewsLow.bind(this)\n    this.handleUpdateViewsHigh = this.handleUpdateViewsHigh.bind(this)\n    this.handleUpdateCommentsLow = this.handleUpdateCommentsLow.bind(this)\n    this.handleUpdateCommentsHigh = this.handleUpdateCommentsHigh.bind(this)\n    this.handleUpdateSubscribersLow = this.handleUpdateSubscribersLow.bind(this)\n    this.handleUpdateSubscribersHigh = this.handleUpdateSubscribersHigh.bind(this)\n    this.handleUpdateLibraryLow = this.handleUpdateLibraryLow.bind(this)\n    this.handleUpdateLibraryHigh = this.handleUpdateLibraryHigh.bind(this)\n  }\n\n  getRandomOffset(){\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n  \n    let randomRow = getRandomInt(2000);\n    return randomRow;\n  };\n\n  removeOffsetAndUpdate(value){\n    this.setState({offset: value}, this.handleUpdateVideos);\n  }\n\n  handleUpdateVideos() {\n    getTrendingVideos(this.state.country, this.state.channelLanguage, this.state.pageCount, this.state.offset, this.state.trendStart, this.state.trendStop, \n      this.state.publishStart, this.state.publishStop, this.state.videoTitleString, this.state.channelTitleString, this.state.tagString, this.state.categoryString,\n      this.state.viewsLow, this.state.viewsHigh, this.state.likesLow, this.state.likesHigh, this.state.dislikesLow, this.state.dislikesHigh, \n      this.state.commentsLow, this.state.commentsHigh,this.state.subscribersLow, this.state.subscribersHigh, this.state.libraryLow, this.state.libraryHigh).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  }\n\n  handleVideoTitleString(value){\n    this.setState({videoTitleString: value})\n  }\n\n  handleChannelTitleString(value){\n    this.setState({channelTitleString: value})\n  }\n\n  handleTagString(value){\n    this.setState({tagString: value})\n  }\n\n  handleLanguageChange(value){\n    this.setState({channelLanguage: value})\n  }\n\n  handleCategoryString(value){\n    this.setState({categoryString: value})\n  }\n\n  handleUpdateViewsLow(value){\n    this.setState({viewsLow: value})\n  }\n\n  handleUpdateViewsHigh(value){\n    this.setState({viewsHigh: value})\n  }\n\n  handleUpdateLikesLow(value){\n    this.setState({likesLow: value})\n  }\n\n  handleUpdateLikesHigh(value){\n    this.setState({likesHigh: value})\n  }\n\n  handleUpdateDislikesLow(value){\n    this.setState({dislikesLow: value})\n  }\n\n  handleUpdateDislikesHigh(value){\n    this.setState({dislikesHigh: value})\n  }\n\n  handleUpdateCommentsLow(value){\n    this.setState({commentsLow: value})\n  }\n\n  handleUpdateCommentsHigh(value){\n    this.setState({commentsHigh: value})\n  }\n\n  handleUpdateSubscribersLow(value){\n    this.setState({subscribersLow: value})\n  }\n\n  handleUpdateSubscribersHigh(value){\n    this.setState({subscribersHigh: value})\n  }\n\n  handleUpdateLibraryLow(value){\n    this.setState({libraryLow: value})\n  }\n\n  handleUpdateLibraryHigh(value){\n    this.setState({libraryHigh: value})\n  }\n\n  handleUpdatePublishStart(value){\n    this.setState({publishStart: value})\n  }\n\n  handleUpdatePublishStop(value){\n    this.setState({publishStop: value})\n  }\n\n  handleUpdateTrendStart(value){\n    this.setState({trendStart: value})\n  }\n\n  handleUpdateTrendStop(value){\n    this.setState({trendStop: value})\n  }\n\n  handleMorePages(){\n    this.setState({pageCount: (this.state.pageCount + 1)},this.handleUpdateVideos);\n  }\n\n  handleCountryChange(value){\n    this.setState({country: value})\n  }\n\n  handleLanguageChange(value){\n    this.setState({channelLanguage: value})\n  }\n\n  componentDidMount() {\n    getTrendingVideos(this.state.country, this.state.channelLanguage, this.state.pageCount, this.state.offset, this.state.trendStart, this.state.trendStop, \n      this.state.publishStart, this.state.publishStop, this.state.videoTitleString, this.state.channelTitleString, this.state.tagString, this.state.categoryString,\n      this.state.viewsLow, this.state.viewsHigh, this.state.likesLow, this.state.likesHigh, this.state.dislikesLow, this.state.dislikesHigh, \n      this.state.commentsLow, this.state.commentsHigh,this.state.subscribersLow, this.state.subscribersHigh, this.state.libraryLow, this.state.libraryHigh).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  };\n\n  render() {\n\n    return (\n      \n      <div className='outerDiv'>\n        <HeaderBar handleCountryChange={this.handleCountryChange} handleUpdateTrendStart={this.handleUpdateTrendStart} handleUpdateTrendStop={this.handleUpdateTrendStop}\n        handleUpdatePublishStart={this.handleUpdatePublishStart} handleUpdatePublishStop={this.handleUpdatePublishStop}\n        removeOffsetAndUpdate={this.removeOffsetAndUpdate} handleVideoTitleString={this.handleVideoTitleString}\n        handleChannelTitleString={this.handleChannelTitleString} handleTagString={this.handleTagString}\n        handleUpdateViewsLow={this.handleUpdateViewsLow} handleUpdateViewsHigh={this.handleUpdateViewsHigh} handleUpdateLikesLow={this.handleUpdateLikesLow} handleUpdateLikesHigh={this.handleUpdateLikesHigh} \n        handleUpdateDislikesLow={this.handleUpdateDislikesLow} handleUpdateDislikesHigh={this.handleUpdateDislikesHigh} handleUpdateCommentsLow={this.handleUpdateCommentsLow} handleUpdateCommentsHigh={this.handleUpdateCommentsHigh} \n        handleUpdateLibraryLow={this.handleUpdateLibraryLow} handleUpdateLibraryHigh={this.handleUpdateLibraryHigh} handleLanguageChange={this.handleLanguageChange}\n        />\n        \n        <div id=\"page\">\n          <div id=\"sideBar\">\n              <Navbar />\n          </div>\n        \n          <div id=\"pageContent\">\n            <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh', marginBottom: '5vh' }}>\n              <h1 id=\"pageTitle\">{this.state.searchTerm ? 'Search Results' : 'Video Search'}</h1>\n              <Grid>\n                \n                {this.state.videoResults.map(video=>(\n                  <VideoThumbnail\n                    thumbLink = {video.thumbnail_link}\n                    videoId = {video.video_id}\n                    videoTitle = {video.video_title}\n                  />\n                ))}\n                \n              </Grid>\n              <div >\n                {this.state.pageCount <= this.state.loadLimit && (\n                  <button id=\"loadMoreBtn\" onClick={this.handleMorePages}><img id=\"loadIcon\" src={loadIcon}/> Load More Videos</button>\n                )}\n              \n              </div>\n\n            <div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    )\n  };\n\n}\n\nexport default TrendingVideosPage\n\n\n\n/*\n<Table onRow={(record, rowIndex) => {\n            //return {\n             // onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n            //};\n          }} dataSource={this.state.videoResults} rowKey={'key'} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n            <ColumnGroup title=\"Random Videos\">\n              <Column title=\"Video Title\" dataIndex=\"title\" sorter= {(a, b) => a.title.localeCompare(b.title)}/>\n              <Column title=\"Trending Date\" dataIndex=\"trend_start\" sorter= {(a, b) => a.trend_start.localeCompare(b.trend_start)}/>\n              <Column title=\"Trending Date\" dataIndex=\"trend_stop\" sorter= {(a, b) => a.trend_stop.localeCompare(b.trend_stop)}/>\n              <Column title=\"Likes\" dataIndex=\"likes\" sorter= {(a, b) => a.likes.localeCompare(b.likes)}/>\n              <Column title=\"Picture Thumbnail\" dataIndex=\"thumbnail_link\"/>\n            </ColumnGroup>\n          </Table>  \n*/","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/fetcher.js",[],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/HeaderBar.js",["129","130","131","132","133","134","135","136","137","138","139"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './HeaderBar.css';\nimport HeaderLogo from '../components/HeaderLogo';\nimport SearchBar from '../components/SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { SearchOutlined } from '@ant-design/icons';\nimport searchBarIcon from '../images/searchicon.svg';\nimport {\n    Table,\n    Select,\n    Slider,\n    Row,\n    Col,\n    Input,\n    Button\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n\nconst countryData = ['Brazil', 'Canada', 'France', 'Germany', 'India', 'Japan', 'Mexico', 'Russia', 'South Korea', 'United Kingdom', 'United States'];\nconst languageData = ['Albanian', 'Arabic', 'Armenian', 'Bengali', 'Bhojpuri', 'Bosnian', 'Bulgarian', 'Catalan', 'Chichewa', \n    'Chinese', 'Croatian', 'Czech', 'Dutch', 'English', 'Estonian', 'Filipino', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', \n    'Hindi', 'Hungarian', 'Indian', 'Indonesian', 'Italian', 'Japanese', 'Kannada', 'Korean', 'Malay', 'Malayalam', 'Marathi', 'Nepali', \n    'Norwegian', 'Polish', 'Portuguese', 'Punjabi', 'Romanian', 'Russian', 'Serbian', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', \n    'Swedish', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese'];\nconst dateFormat = 'YYYY-MM-DD';\nconst customFormat = (value) => `custom format: ${value.format(dateFormat)}`;\n\nconst HeaderBar =({removeOffsetAndUpdate,handleCountryChange, handleUpdateTrendStart, \n  handleUpdateTrendStop, handleVideoTitleString, handleChannelTitleString, \n  handleTagString, handleUpdatePublishStart, handleUpdatePublishStop, handleUpdateViewsLow,\n  handleUpdateViewsHigh, handleUpdateLikesLow, handleUpdateLikesHigh, handleUpdateDislikesLow, \n  handleUpdateDislikesHigh, handleUpdateCommentsLow, handleUpdateCommentsHigh,\nhandleLanguageChange, handleUpdateSubscribersLow, handleUpdateSubscribersHigh,\nhandleUpdateLibraryLow, handleUpdateLibraryHigh, handleCategoryString})=> {\n\n  const [currentCountry, setCurrentCountry] = useState(\"United States\");\n  const [currentLanguage, setCurrentLanguage] = useState(\"English\");\n  const [videoTitle, setVideoTitle] = useState('');\n  const [channelTitle, setChannelTitle] = useState('');\n  const [tagString, setTagString] = useState('');\n  const [categoryString, setCategoryString] = useState('');\n\n  const changeCountry = event => {\n    setCurrentCountry(event);\n    handleCountryChange(event);\n  }\n\n  const changeLanguage = event => {\n    setCurrentLanguage(event);\n    handleLanguageChange(event);\n  }\n\n  const changeTrendingDates = (date, dateString) => {\n    handleUpdateTrendStart(dateString[0]);\n    handleUpdateTrendStop(dateString[1]);\n  };\n\n  const changeViews = event => {\n    handleUpdateViewsLow(event[0]);\n    handleUpdateViewsHigh(event[1]);\n  };\n\n  const changeLikes = event => {\n    handleUpdateLikesLow(event[0]);\n    handleUpdateLikesHigh(event[1]);\n  };\n\n  const changeDislikes = event => {\n    handleUpdateDislikesLow(event[0]);\n    handleUpdateDislikesHigh(event[1]);\n  };\n\n  const changeComments = event => {\n    handleUpdateCommentsLow(event[0]);\n    handleUpdateCommentsHigh(event[1]);\n  };\n\n  const changeSubscribers = event => {\n    handleUpdateSubscribersLow(event[0]);\n    handleUpdateSubscribersHigh(event[1]);\n  };\n\n  const changeLibrarySize = event => {\n    handleUpdateLibraryLow(event[0]);\n    handleUpdateLibraryHigh(event[1]);\n  };\n\n  const changePublishedDates = (date, dateString) => {\n    handleUpdatePublishStart(dateString[0]);\n    handleUpdatePublishStop(dateString[1]);\n  };\n\n  const changeVideoTitleString = (event) => {\n    console.log(event.target.value);\n    setVideoTitle(event.target.value);\n    handleVideoTitleString(event.target.value);\n  };\n\n  const changeChannelTitleString = (event) => {\n    console.log(event.target.value);\n    setChannelTitle(event.target.value);\n    handleChannelTitleString(event.target.value);\n  };\n\n  const changeTagString = (event) => {\n    console.log(event.target.value);\n    setTagString(event.target.value);\n    handleTagString(event.target.value);\n  };\n\n  const changeCategoryString = (event) => {\n    console.log(event.target.value);\n    setCategoryString(event.target.value);\n    handleCategoryString(event.target.value);\n  };\n\n  const updateSearch = (event) =>{\n    removeOffsetAndUpdate(0);\n  }\n\n  function numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\n  return(\n    <div className=\"headerBar\">\n        <div className=\"headerLogo\">\n          <HeaderLogo />\n        </div>\n\n        <div className=\"headerExLogo\">\n\n              <div className=\"headerSearch\">\n              <Row>\n                  <Col span={8}>\n                      <Row>\n                          <Col span={9}>\n                              <p className='videoTitleSearch'>Video Title: </p>\n                          </Col>\n                          <Col span={15}>\n                              <Input value={videoTitle} placeholder=\"Starts with...\" onChange={changeVideoTitleString}/>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n              \n                  <Col span={8}>\n                      <Row>\n                          <Col span={9}>\n                              <p className='channelTitleSearch'>Channel Title: </p>\n                          </Col>\n                          <Col span={15}>\n                              <Input id=\"channelTitleInput\" value={channelTitle} placeholder=\"Starts with...\" onChange={changeChannelTitleString}/>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n              \n                  <Col span={8}>\n                      <Row>\n                          <Col span={9}>\n                              <p className='categorySearch'>Category: </p>\n                          </Col>\n                          <Col span={15}>\n                              <Input value={categoryString} placeholder=\"Type here\" onChange={changeCategoryString}/>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n                </Row>\n                <Row>\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='countryLabel'>Country: </p>\n                            </Col>\n                            <Col span={15} id=\"countrySelectCol\">\n                            <Select value={currentCountry} id=\"countrySelector\" onChange={changeCountry} >\n                            {countryData.map((country) => (<Option key={country} value={country}>{country}</Option>))}\n                            </Select>\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                    <Col span={9}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='selectTrendingDates'>Trending Dates: </p>\n                            </Col>\n                            <Col span={5} id=\"trendDateSelectCol\">\n                            <RangePicker\n                            defaultValue={[moment('2020-08-01', dateFormat), moment('2022-06-20', dateFormat)]}\n                            format={dateFormat} onChange={changeTrendingDates} id=\"trendDatePicker\"\n                            />\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                    <Col span={9}>\n                        <Row>\n                            <Col span={8}>\n                                <p className='selectPublishDates'>Publish Dates: </p>\n                            </Col>\n                            <Col span={5} id=\"publishDatePicker\">\n                            <RangePicker\n                            format={dateFormat} onChange={changePublishedDates}\n                            />\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                </Row>\n                <Row>\n                    \n                    <Col span={6}>\n\n                        <Row>\n                            <Col span={12}>\n                                <p className='viewsLabel'>Video Views: </p>\n                            </Col>\n                            <Col span={12} id=\"viewsSlider\">\n                                <Slider tipFormatter={numFormatter} range defaultValue={[1000000, 50000000]} \n                                min={1} max={300000000} onChange={changeViews}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='likesLabel'>Likes: </p>\n                            </Col>\n                            <Col span={15} id=\"likesSliderCol\">\n                                <Slider id=\"likesSlider\" range min={0} max={17000000} defaultValue={[5000, 5000000]} \n                                tipFormatter={numFormatter} onChange={changeLikes}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='dislikesLabel'>Dislikes: </p>\n                            </Col>\n                            <Col span={15} class='sliderCol'>\n                                <Slider range min={0} max={13000000} defaultValue={[3000, 3000000]} \n                                tipFormatter={numFormatter} onChange={changeDislikes}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='commentsLabel'>Comments: </p>\n                            </Col>\n                            <Col span={15} class='sliderCol'>\n                                <Slider range defaultValue={[7000, 2000000]} min={0} max={7000000} \n                                tipFormatter={numFormatter} onChange={changeComments}/>\n                            </Col>\n                        </Row>   \n                    </Col>\n\n                </Row>\n\n                <Row>\n                    \n                    <Col span={6}>\n\n                        <Row>\n                            <Col span={12}>\n                                <p className='channelSubscribersLabel'>Channel Subscribers: </p>\n                            </Col>\n                            <Col span={12} id=\"channelSubscribersCol\">\n                                <Slider tipFormatter={numFormatter} range defaultValue={[10000, 40000000]} \n                                min={10000} max={220000000} onChange={changeSubscribers}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='channelLibraryLabel'>Channel Library: </p>\n                            </Col>\n                            <Col span={14} id=\"channelLibraryCol\">\n                                <Slider id=\"librarySlider\" tipFormatter={numFormatter} range defaultValue={[10, 15000]} \n                                min={10} max={50000} onChange={changeLibrarySize}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={8}>\n                                <p className='channelLanguageLabel'>Channel Language: </p>\n                            </Col>\n                            <Col span={10} id=\"languageCol\">\n                            <Select value={currentLanguage} id=\"languageSelector\" onChange={changeLanguage} >\n                            {languageData.map((language) => (<Option key={language} value={language}>{language}</Option>))}\n                            </Select>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6} id=\"submitButtonWrap\">\n                        \n                    <div class=\"submitSearch\">\n                        <Button id=\"submitVideoSearch\" onClick={updateSearch}><img id=\"searchIcon\" src={searchBarIcon}/>Search</Button>\n                    </div>\n                            \n                    </Col>\n\n                </Row>\n\n              </div>\n              <div className=\"headerSelectors\">\n              </div>\n              </div>\n        \n  </div>\n  )     \n};\n\nexport default HeaderBar;\n\n\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/HeaderLogo.js",["140","141","142","143","144","145","146","147","148"],"\nimport React, {useState} from 'react';\n\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport TubeDBLogo from '../images/RedLogo.svg';\n\n\n\nclass HeaderLogo extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n      <Nav justified>\n        <div id=\"header\">\n        <div id=\"headerLogo\">\n          <a href=\"./trendingvideos\">\n        <img src={TubeDBLogo} width={180} />\n        </a>\n        </div>\n        </div>\n      </Nav>\n    );\n  }\n}\n\n\nexport default HeaderLogo;\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/LikeButton.js",[],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/Navbar.js",["149","150"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport {BsFillPlayBtnFill, BsFillPersonFill, BsBookmarkHeartFill} from 'react-icons/bs';\nimport * as IoIcons from 'react-icons/io';\nimport { MdOutlineOndemandVideo } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nconst SidebarData = [ \n  {\n    title: 'Videos',\n    path: '/trendingvideos',\n    icon: < BsFillPlayBtnFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Channels',\n    path: '/topchannels',\n    icon: < MdOutlineOndemandVideo />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Favorites',\n    path: '/savedvideos',\n    icon: < BsBookmarkHeartFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Logout',\n    path: '/',\n    icon: < BsFillPersonFill />,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Support',\n    path: '/support',\n    icon: <IoIcons.IoMdHelpCircle />,\n    cName: 'nav-text'\n  }\n];\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(true);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  var user = sessionStorage.getItem('userInfo');\n\n  console.log(user);\n\n\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navigation'>\n        <nav className='nav-menu'>\n          <ul className='nav-menu-items'>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n        <h6 class=\"white-text\">Logged in as: <br></br> <u>{user}</u></h6>\n        </div>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/ChannelsHeader.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './ChannelsHeader.css';\nimport HeaderLogo from '../components/HeaderLogo';\nimport SearchBar from '../components/SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass ChannelsHeader extends React.Component {\n\n    render(){\n        return(\n          <div className=\"headerBar\">\n\n            <div className=\"headerLogo\">\n                <HeaderLogo />\n            </div>\n\n            <div className=\"headerExLogo\">\n                <h1 className='pageTitle'>Channel Search</h1>\n            </div>\n            \n          </div>\n        )\n    }\n}\n\nexport default ChannelsHeader\n\n\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/SideMenu.js",["167","168","169","170","171","172","173","174","175","176"],"import React, {useState} from 'react';\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport Navbar from './Navbar';\nimport HeaderLogo from './HeaderLogo';\n\nimport './SideMenu.css';\n\n\nclass SideMenu extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n    <>\n      <div className=\"navigation\">\n      <Navbar />\n      </div>\n    </>\n     \n    );\n  }\n}\n\nexport default SideMenu;\n\n\n\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/TrendingVideoCard.js",["177","178","179"],"import React from \"react\";\nimport \"./TrendingVideoCard.css\";\n\nimport {\n    Row,\n    Col\n} from 'antd'\n\n\n\n\nconst prototype = [{\"title\":\"I’ve Got a Huge Secret Hiding Behind This Fake Office\",\"published\":\"2022-06-15T04:00:00.000Z\",\"video_id\":\"h8g9wfI9nGI\",\"views\":9075972,\"trend_stop\":\"2022-06-18T04:00:00.000Z\",\"trend_start\":\"2022-06-16T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Pranks Destroy Scam Callers- GlitterBomb Payback\",\"published\":\"2022-05-08T04:00:00.000Z\",\"video_id\":\"xsLJZyih3Ac\",\"views\":30868590,\"trend_stop\":\"2022-05-17T04:00:00.000Z\",\"trend_start\":\"2022-05-09T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Robot Piano Catches Fire Playing Rush E (World’s Hardest Song)\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":9185225,\"trend_stop\":\"2022-03-27T04:00:00.000Z\",\"trend_start\":\"2022-03-27T04:00:00.000Z\",\"countries\":\"United Kingdom\"},{\"title\":\"This Piano Speaks English\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":8014045,\"trend_stop\":\"2022-03-26T04:00:00.000Z\",\"trend_start\":\"2022-03-20T04:00:00.000Z\",\"countries\":\"Canada,Germany,United Kingdom,United States\"},{\"title\":\"World's Largest T-Shirt Cannon\",\"published\":\"2021-12-20T05:00:00.000Z\",\"video_id\":\"QiKZYt9070U\",\"views\":6387831,\"trend_stop\":\"2021-12-22T05:00:00.000Z\",\"trend_start\":\"2021-12-21T05:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"}];\n\n\nfunction TrendingVideoCard({data, num}) {\n\n    function numFormatter(num) {\n        if(num >= 1000 && num < 1000000){\n            return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n        }else if(num >= 1000000 && num < 1000000000){\n            return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n        }else if(num >= 1000000000){\n            return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n        }else if(num < 900){\n            return num; // if num < 1000, do nothing\n        }\n    }\n\n    \n\n    let record_data = data;\n    \n    let days = record_data.trend_stop - record_data.trend_stop;\n\n    let countries = \"\";\n\n    if(record_data.countries.includes(\",\")){\n        countries = (record_data.countries).split(\",\").join(\" \");\n    }else{\n        countries = record_data.countries\n    }\n    \n\n    const trend_start = new Date(record_data.trend_start.slice(0,19));\n    const trend_stop = new Date(record_data.trend_stop.slice(0,19));\n\n    const trend_duration_ms = trend_stop.getTime() - trend_start.getTime();\n    let trend_duration_hr = (trend_duration_ms / 3600000).toFixed(0);\n\n    let gradient = \"videoThumbnailSection\"+num;\n\n    if (trend_duration_hr < 24){\n        trend_duration_hr = '< 24'\n    }\n\n    let img_url = \"https://i.ytimg.com/vi/\"+ record_data.video_id + \"/hqdefault.jpg\";\n    let watch_url = '/video?videoid=' + record_data.video_id\n\n\n    return (\n        <div className=\"videoCard\">\n            <Row className='trendingVideoNameSection'>\n                <Col className='trendingVideoNameSection' onClick={watch_url}>\n                    <Row className='videoTitleContainer'>\n                        <h4 className='videoTitle'>{record_data.title}</h4>\n                    </Row>\n                    \n                    <Row>\n                        <Col span={6}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Views:</b> {numFormatter(record_data.views)}</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Trending for:</b> {trend_duration_hr} hours</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Published:</b> {record_data.published.slice(0,10)}</h5>\n                        </Col>\n                    </Row>\n                </Col>\n                \n            </Row>\n            \n            <Row className={gradient}>\n                <Col span={6}>\n                    <h5 className='videoDataCountries'><b className=\"videoDataTitle\">Countries:</b><br></br>{countries}</h5>\n                </Col>\n                <Col span={18}>\n                    <a href={watch_url}><img className='videoTile' src={img_url}/></a>\n                </Col>\n            </Row>\n        </div>\n    );\n }\n\n \n\nexport default TrendingVideoCard;","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/Grid.js",[],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/VideoThumbnail.js",[],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/SearchBar.js",[],"/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/NavbarItem.js",["180","181"],"import React from \"react\";\nimport \"./NavbarItem.css\";\nimport navitemLogo from '../images/view-grid@2x.svg';\n\nfunction NavbarItem(props) {\n  const { text, className } = props;\n\n  return (\n    <div className>\n    <div className=\"nav-item\">\n      <img className=\"view-grid\" src={navitemLogo} />\n      <div className=\"text\">{text}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default NavbarItem;","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/pages/FavoritedVideos.js",["182","183","184","185","186"],"import React from 'react';\nimport './TrendingVideosPage.css'\nimport FavoritedHeader from '../components/FavoritedHeader';\nimport { getFavoritedVideos, getTrendingVideos } from '../fetcher'\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport Navbar from '../components/Navbar';\nimport loadIcon from '../images/load-icon.png';\n\nimport {\n  Table,\n  Select,\n} from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nclass FavoritedVideosPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      user: sessionStorage.getItem('userInfo'),\n      videoResults: [],\n      videoid: \"--0bCF-iK2E\"\n    }\n\n  }\n\n  handleUpdateVideos() {\n    getFavoritedVideos(this.state.user).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  }\n\n  componentDidMount() {\n    getFavoritedVideos(this.state.user).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  };\n\n  render() {\n\n    return (\n      \n      <div className='outerDiv'>\n        <FavoritedHeader/>\n        \n        <div id=\"page\">\n          <div id=\"sideBar\">\n              <Navbar />\n          </div>\n        \n          <div id=\"pageContent\">\n            <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh', marginBottom: '5vh' }}>\n              <Grid>\n                \n                {this.state.videoResults?.map(video=>(\n                  <VideoThumbnail\n                    thumbLink = {video.thumbnail_link}\n                    videoId = {video.video_id}\n                    videoTitle = {video.video_title}\n                  />\n                ))}\n                \n              </Grid>\n\n            <div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    )\n  };\n\n}\n\nexport default FavoritedVideosPage\n\n\n","/Users/sanjeeva/CIS5500-Team-Project4/tube-db/client/src/components/FavoritedHeader.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './FavoritedHeader.css';\nimport HeaderLogo from './HeaderLogo';\nimport SearchBar from './SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass FavoritedHeader extends React.Component {\n\n    render(){\n        return(\n          <div className=\"headerBar\">\n\n            <div className=\"headerLogo\">\n                <HeaderLogo />\n            </div>\n\n            <div className=\"headerExLogo\">\n                <h1 className='pageTitle'>Favorited Videos</h1>\n            </div>\n            \n          </div>\n        )\n    }\n}\n\nexport default FavoritedHeader\n\n\n",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":4,"column":31,"nodeType":"209","messageId":"210","endLine":4,"endColumn":45},{"ruleId":"207","severity":1,"message":"211","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"212","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":19},{"ruleId":"207","severity":1,"message":"213","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":18,"column":17,"nodeType":"209","messageId":"210","endLine":18,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":19,"column":9,"nodeType":"209","messageId":"210","endLine":19,"endColumn":15},{"ruleId":"207","severity":1,"message":"217","line":21,"column":5,"nodeType":"209","messageId":"210","endLine":21,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":126,"column":26,"nodeType":"220","endLine":127,"endColumn":38},{"ruleId":"207","severity":1,"message":"221","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":20},{"ruleId":"207","severity":1,"message":"222","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":13},{"ruleId":"207","severity":1,"message":"223","line":8,"column":5,"nodeType":"209","messageId":"210","endLine":8,"endColumn":12},{"ruleId":"207","severity":1,"message":"224","line":17,"column":10,"nodeType":"209","messageId":"210","endLine":17,"endColumn":18},{"ruleId":"207","severity":1,"message":"225","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":23},{"ruleId":"207","severity":1,"message":"211","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"226","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":12},{"ruleId":"207","severity":1,"message":"227","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":22},{"ruleId":"207","severity":1,"message":"212","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":19},{"ruleId":"207","severity":1,"message":"214","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":18,"column":17,"nodeType":"209","messageId":"210","endLine":18,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":19,"column":9,"nodeType":"209","messageId":"210","endLine":19,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":77,"column":19,"nodeType":"220","endLine":78,"endColumn":49},{"ruleId":"207","severity":1,"message":"228","line":121,"column":5,"nodeType":"209","messageId":"210","endLine":121,"endColumn":16},{"ruleId":"207","severity":1,"message":"227","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"229","line":26,"column":10,"nodeType":"209","messageId":"210","endLine":26,"endColumn":16},{"ruleId":"207","severity":1,"message":"230","line":85,"column":7,"nodeType":"209","messageId":"210","endLine":85,"endColumn":19},{"ruleId":"207","severity":1,"message":"214","line":15,"column":9,"nodeType":"209","messageId":"210","endLine":15,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":15,"column":17,"nodeType":"209","messageId":"210","endLine":15,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":16,"column":9,"nodeType":"209","messageId":"210","endLine":16,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":229,"column":3,"nodeType":"233","messageId":"234","endLine":231,"endColumn":4},{"ruleId":"235","severity":1,"message":"236","line":277,"column":75,"nodeType":"220","endLine":277,"endColumn":110},{"ruleId":"207","severity":1,"message":"237","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"238","line":6,"column":22,"nodeType":"209","messageId":"210","endLine":6,"endColumn":27},{"ruleId":"207","severity":1,"message":"239","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":23},{"ruleId":"207","severity":1,"message":"240","line":7,"column":25,"nodeType":"209","messageId":"210","endLine":7,"endColumn":38},{"ruleId":"207","severity":1,"message":"241","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":24},{"ruleId":"207","severity":1,"message":"214","line":21,"column":9,"nodeType":"209","messageId":"210","endLine":21,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":21,"column":17,"nodeType":"209","messageId":"210","endLine":21,"endColumn":28},{"ruleId":"207","severity":1,"message":"242","line":33,"column":7,"nodeType":"209","messageId":"210","endLine":33,"endColumn":19},{"ruleId":"207","severity":1,"message":"243","line":47,"column":10,"nodeType":"209","messageId":"210","endLine":47,"endColumn":19},{"ruleId":"207","severity":1,"message":"244","line":112,"column":9,"nodeType":"209","messageId":"210","endLine":112,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":332,"column":79,"nodeType":"220","endLine":332,"endColumn":121},{"ruleId":"207","severity":1,"message":"245","line":2,"column":16,"nodeType":"209","messageId":"210","endLine":2,"endColumn":24},{"ruleId":"207","severity":1,"message":"246","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":26},{"ruleId":"207","severity":1,"message":"247","line":4,"column":28,"nodeType":"209","messageId":"210","endLine":4,"endColumn":40},{"ruleId":"207","severity":1,"message":"248","line":4,"column":42,"nodeType":"209","messageId":"210","endLine":4,"endColumn":57},{"ruleId":"207","severity":1,"message":"249","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":18},{"ruleId":"207","severity":1,"message":"250","line":6,"column":15,"nodeType":"209","messageId":"210","endLine":6,"endColumn":22},{"ruleId":"207","severity":1,"message":"251","line":6,"column":24,"nodeType":"209","messageId":"210","endLine":6,"endColumn":31},{"ruleId":"207","severity":1,"message":"252","line":7,"column":9,"nodeType":"209","messageId":"210","endLine":7,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":30,"column":9,"nodeType":"220","endLine":30,"endColumn":45},{"ruleId":"207","severity":1,"message":"253","line":2,"column":13,"nodeType":"209","messageId":"210","endLine":2,"endColumn":20},{"ruleId":"207","severity":1,"message":"254","line":47,"column":9,"nodeType":"209","messageId":"210","endLine":47,"endColumn":20},{"ruleId":"207","severity":1,"message":"237","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"238","line":6,"column":22,"nodeType":"209","messageId":"210","endLine":6,"endColumn":27},{"ruleId":"207","severity":1,"message":"255","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":14},{"ruleId":"207","severity":1,"message":"256","line":7,"column":16,"nodeType":"209","messageId":"210","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"257","line":7,"column":27,"nodeType":"209","messageId":"210","endLine":7,"endColumn":36},{"ruleId":"207","severity":1,"message":"258","line":7,"column":38,"nodeType":"209","messageId":"210","endLine":7,"endColumn":44},{"ruleId":"207","severity":1,"message":"259","line":7,"column":46,"nodeType":"209","messageId":"210","endLine":7,"endColumn":50},{"ruleId":"207","severity":1,"message":"260","line":7,"column":52,"nodeType":"209","messageId":"210","endLine":7,"endColumn":60},{"ruleId":"207","severity":1,"message":"261","line":7,"column":62,"nodeType":"209","messageId":"210","endLine":7,"endColumn":71},{"ruleId":"207","severity":1,"message":"262","line":7,"column":73,"nodeType":"209","messageId":"210","endLine":7,"endColumn":81},{"ruleId":"207","severity":1,"message":"263","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":11,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":16,"column":9,"nodeType":"209","messageId":"210","endLine":16,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":16,"column":17,"nodeType":"209","messageId":"210","endLine":16,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":17,"column":9,"nodeType":"209","messageId":"210","endLine":17,"endColumn":15},{"ruleId":"207","severity":1,"message":"264","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":20},{"ruleId":"207","severity":1,"message":"265","line":20,"column":7,"nodeType":"209","messageId":"210","endLine":20,"endColumn":17},{"ruleId":"207","severity":1,"message":"245","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":24},{"ruleId":"207","severity":1,"message":"246","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"207","severity":1,"message":"247","line":2,"column":28,"nodeType":"209","messageId":"210","endLine":2,"endColumn":40},{"ruleId":"207","severity":1,"message":"248","line":2,"column":42,"nodeType":"209","messageId":"210","endLine":2,"endColumn":57},{"ruleId":"207","severity":1,"message":"249","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":18},{"ruleId":"207","severity":1,"message":"266","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":13},{"ruleId":"207","severity":1,"message":"250","line":4,"column":15,"nodeType":"209","messageId":"210","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"251","line":4,"column":24,"nodeType":"209","messageId":"210","endLine":4,"endColumn":31},{"ruleId":"207","severity":1,"message":"252","line":5,"column":9,"nodeType":"209","messageId":"210","endLine":5,"endColumn":13},{"ruleId":"207","severity":1,"message":"267","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":18},{"ruleId":"207","severity":1,"message":"268","line":12,"column":7,"nodeType":"209","messageId":"210","endLine":12,"endColumn":16},{"ruleId":"207","severity":1,"message":"269","line":33,"column":9,"nodeType":"209","messageId":"210","endLine":33,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":88,"column":41,"nodeType":"220","endLine":88,"endColumn":83},{"ruleId":"207","severity":1,"message":"270","line":6,"column":17,"nodeType":"209","messageId":"210","endLine":6,"endColumn":26},{"ruleId":"235","severity":1,"message":"236","line":11,"column":7,"nodeType":"220","endLine":11,"endColumn":54},{"ruleId":"207","severity":1,"message":"271","line":4,"column":30,"nodeType":"209","messageId":"210","endLine":4,"endColumn":47},{"ruleId":"207","severity":1,"message":"272","line":8,"column":8,"nodeType":"209","messageId":"210","endLine":8,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":15,"column":9,"nodeType":"209","messageId":"210","endLine":15,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":15,"column":17,"nodeType":"209","messageId":"210","endLine":15,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":16,"column":9,"nodeType":"209","messageId":"210","endLine":16,"endColumn":15},{"ruleId":"207","severity":1,"message":"237","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"238","line":6,"column":22,"nodeType":"209","messageId":"210","endLine":6,"endColumn":27},{"ruleId":"207","severity":1,"message":"255","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":14},{"ruleId":"207","severity":1,"message":"256","line":7,"column":16,"nodeType":"209","messageId":"210","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"257","line":7,"column":27,"nodeType":"209","messageId":"210","endLine":7,"endColumn":36},{"ruleId":"207","severity":1,"message":"258","line":7,"column":38,"nodeType":"209","messageId":"210","endLine":7,"endColumn":44},{"ruleId":"207","severity":1,"message":"259","line":7,"column":46,"nodeType":"209","messageId":"210","endLine":7,"endColumn":50},{"ruleId":"207","severity":1,"message":"260","line":7,"column":52,"nodeType":"209","messageId":"210","endLine":7,"endColumn":60},{"ruleId":"207","severity":1,"message":"261","line":7,"column":62,"nodeType":"209","messageId":"210","endLine":7,"endColumn":71},{"ruleId":"207","severity":1,"message":"262","line":7,"column":73,"nodeType":"209","messageId":"210","endLine":7,"endColumn":81},{"ruleId":"207","severity":1,"message":"263","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":11,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":16,"column":9,"nodeType":"209","messageId":"210","endLine":16,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":16,"column":17,"nodeType":"209","messageId":"210","endLine":16,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":17,"column":9,"nodeType":"209","messageId":"210","endLine":17,"endColumn":15},{"ruleId":"207","severity":1,"message":"264","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":20},{"ruleId":"207","severity":1,"message":"265","line":20,"column":7,"nodeType":"209","messageId":"210","endLine":20,"endColumn":17},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'getSingleVideo' is defined but never used.","Identifier","unusedVar","'HeaderBar' is defined but never used.","'useParams' is defined but never used.","'LikeButton' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","'linkBegin' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useReducer' is defined but never used.","'image' is defined but never used.","'clicked' is assigned a value but never used.","'passWord' is assigned a value but never used.","'getHomeVideos' is defined but never used.","'Grid' is defined but never used.","'VideoThumbnail' is defined but never used.","'Likecomment' is assigned a value but never used.","'Footer' is defined but never used.","'handleChange' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'handleLanguageChange'.","MethodDefinition","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SearchBar' is defined but never used.","'Space' is defined but never used.","'FrownOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'customFormat' is assigned a value but never used.","'tagString' is assigned a value but never used.","'changeTagString' is assigned a value but never used.","'useState' is defined but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'NavbarItem' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'FaIcons' is defined but never used.","'showSidebar' is assigned a value but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Pagination' is defined but never used.","'RangePicker' is assigned a value but never used.","'IconSlider' is assigned a value but never used.","'Nav' is defined but never used.","'HeaderLogo' is defined but never used.","'prototype' is assigned a value but never used.","'days' is assigned a value but never used.","'className' is assigned a value but never used.","'getTrendingVideos' is defined but never used.","'loadIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]