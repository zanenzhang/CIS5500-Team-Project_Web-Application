[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/Login.js":"5","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/SavedVideos.js":"6","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/FavoritedVideos.js":"7","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js":"8","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/ChannelsHeader.js":"9","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js":"10","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js":"11","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js":"12","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"13","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js":"14","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js":"15","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Navbar.js":"16","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/LikeButton.js":"17","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/FavoritedHeader.js":"18","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js":"19","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js":"20","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Autocomplete.js":"21"},{"size":1404,"mtime":1660617192125,"results":"22","hashOfConfig":"23"},{"size":31363,"mtime":1660531631784,"results":"24","hashOfConfig":"23"},{"size":10691,"mtime":1660751407878,"results":"25","hashOfConfig":"23"},{"size":14606,"mtime":1660751407879,"results":"26","hashOfConfig":"23"},{"size":3097,"mtime":1660543863356,"results":"27","hashOfConfig":"23"},{"size":5506,"mtime":1660751407877,"results":"28","hashOfConfig":"23"},{"size":1856,"mtime":1660244365820,"results":"29","hashOfConfig":"23"},{"size":4513,"mtime":1659665331698,"results":"30","hashOfConfig":"23"},{"size":1508,"mtime":1660513071473,"results":"31","hashOfConfig":"23"},{"size":620,"mtime":1660513947663,"results":"32","hashOfConfig":"23"},{"size":205,"mtime":1659299528877,"results":"33","hashOfConfig":"23"},{"size":686,"mtime":1659565734960,"results":"34","hashOfConfig":"23"},{"size":5865,"mtime":1660625936262,"results":"35","hashOfConfig":"23"},{"size":15212,"mtime":1660690591451,"results":"36","hashOfConfig":"23"},{"size":774,"mtime":1659580358224,"results":"37","hashOfConfig":"23"},{"size":1754,"mtime":1660520406546,"results":"38","hashOfConfig":"23"},{"size":1680,"mtime":1660711245852,"results":"39","hashOfConfig":"23"},{"size":1469,"mtime":1660244365811,"results":"40","hashOfConfig":"23"},{"size":943,"mtime":1659916644222,"results":"41","hashOfConfig":"23"},{"size":389,"mtime":1659312132512,"results":"42","hashOfConfig":"23"},{"size":1008,"mtime":1660415884718,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1445w12",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],["102","103"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["104","105","106"],"import React from 'react';\nimport './TopChannels.css';\nimport TrendingVideoCard from '../components/TrendingVideoCard';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport ChannelsHeader from '../components/ChannelsHeader';\nimport SideMenu from '../components/SideMenu';\nimport { SearchOutlined } from '@ant-design/icons';\n\n//import { FixedSizeList as List } from \"react-window\";\n\nimport {\n    Input,\n    Select,\n    Button,\n    Slider,\n    Table,\n    Row,\n    Col,\n    Divider,\n    Carousel\n} from 'antd'\n\n\n\nimport { getChannel, getFindChannels, getChannelRecentTrending } from '../fetcher'\nimport { Footer } from 'antd/lib/layout/layout';\n\n\nconst { Option } = Select;\nconst { Column, ColumnGroup } = Table;\n\nconst countryData = ['Select','Afghanistan', 'Albania', 'Algeria','Argentina', 'Armenia', 'Australia',\n    'Australian Antarctic Territory', 'Austria', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Belarus', 'Belgium', 'Bolivia', \n    'Bosnia and Herzegovina', 'Brazil', 'Bulgaria', 'Cambodia', 'Canada', 'Chile', 'China', 'Colombia', 'Costa Rica', \n    \"Cote d''Ivoire (Ivory Coast)\", 'Croatia', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Dominican Republic', 'Ecuador', \n    'Egypt', 'El Salvador', 'Europe', 'Finland', 'France', 'Gambia, The', 'Georgia', 'Germany', 'Ghana', 'Global', 'Greece', \n    'Guatemala', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy', 'Jamaica', \n    'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Korea, South', 'Kuwait', 'Kyrgyzstan', 'Latin America', 'Latvia', 'Lebanon', \n    'Lithuania', 'Malaysia', 'Malta', 'Martinique', 'Mexico', 'Middle East', 'Moldova', 'Monaco', 'Morocco', 'Nepal', 'Netherlands', \n    'New Zealand', 'Nicaragua', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Panama', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', \n    'Puerto Rico', 'Qatar', 'Romania', 'Russia', 'Senegal', 'Serbia', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'South Africa', \n    'Spain', 'Sri Lanka', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tanzania', 'Thailand', 'Tunisia', 'Turkey', 'U.S. Virgin Islands', 'Uganda', \n    'Ukraine', 'Unidentified', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Venezuela'];\n\n\nconst languageData = ['Select','Albanian', 'Arabic', 'Armenian', 'Bengali', 'Bhojpuri', 'Bosnian', 'Bulgarian', 'Catalan', 'Chichewa', \n    'Chinese', 'Croatian', 'Czech', 'Dutch', 'English', 'Estonian', 'Filipino', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', \n    'Hindi', 'Hungarian', 'Indian', 'Indonesian', 'Italian', 'Japanese', 'Kannada', 'Korean', 'Malay', 'Malayalam', 'Marathi', 'Nepali', \n    'Norwegian', 'Polish', 'Portuguese', 'Punjabi', 'Romanian', 'Russian', 'Serbian', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', \n    'Swedish', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese'];\n\n\nconst producerData = ['Select', 'Creator', 'Entertainer or Event', 'Entertainer/Event', 'Expert', \n    'Institution', 'Manufacturer', 'Media/Content Brand', 'Retailer', 'Service Provider', 'User'];\n\n\n//add the case that values are negative (test abs. val and append - when negative) //perhaps make a utility.js file \nfunction numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\nfunction growthFormatter(deci){\n    let newNum = deci;\n    newNum*=100;\n    if (newNum>=0){\n        return \"+\" + newNum.toFixed(1) + \"%\";\n    }else{\n        return newNum.toFixed(1) + \"%\";\n    }\n}\n\nconst handleChange = (value) => {\n    console.log(`selected ${value}`);\n  };\n\nclass TopChannelsPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQuery: \"\",\n            channelsQuery: \"\",\n            selectedQueryResults: [],\n            channelsQueryResults: [],\n            selectedTrendingQueryResults: [],\n            selectedChannelDetails: null,\n            searchString: null,\n            country: 'Select',\n            language: 'Select',\n            producer: 'Select',\n            rankingLow: 1,\n            rankingHigh: 10000,\n            viewsLow: 1000000,\n            viewsHigh: 194000000000,\n            subsLow: 100000,\n            subsHigh: 218000000,\n            libSizeLow: 10,\n            libSizeHigh: 50000,\n            viewsPerLow: 100000,\n            viewsPerHigh: 100000000,\n            viewsGrowthLow: -1,\n            viewsGrowthHigh: 1,\n            subsGrowthLow: -1,\n            subsGrowthHigh: 1\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n        this.executeSelectedSearch = this.executeSelectedSearch.bind(this)\n\n        this.handleSearchStringChange = this.handleSearchStringChange.bind(this)\n        this.handleCountryChange = this.handleCountryChange.bind(this)\n        this.handleLanguageChange = this.handleLanguageChange.bind(this)\n        this.handleProducerChange = this.handleProducerChange.bind(this)\n        \n        this.handleRankingChange = this.handleRankingChange.bind(this)\n        this.handleViewsChange = this.handleViewsChange.bind(this)\n        this.handleSubsChange = this.handleSubsChange.bind(this)\n        this.handleLibSizeChange = this.handleLibSizeChange.bind(this)\n        this.handleViewsPerChange = this.handleViewsPerChange.bind(this)\n        this.handleViewsGrowthChange = this.handleViewsGrowthChange.bind(this)\n        this.handleSubsGrowthChange = this.handleSubsGrowthChange.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ selectedQuery: event.target.value })\n    }\n\n    handleSearchStringChange(event){\n        this.setState({searchString: event.target.value})\n    }\n\n    handleCountryChange(value) {\n        this.setState({ country: value})\n    }\n\n\n    handleLanguageChange(value) {\n        this.setState({ language: value})\n    }\n\n\n    handleProducerChange(value) {\n        this.setState({ producer: value})\n    }\n\n    handleRankingChange(value) {\n        this.setState({ rankingLow: value[0] })\n        this.setState({ rankingHigh: value[1] })\n    }\n\n    handleViewsChange(value) {\n        this.setState({ viewsLow: value[0] })\n        this.setState({ viewsHigh: value[1] })\n    }\n\n    handleSubsChange(value) {\n        this.setState({ subsLow: value[0] })\n        this.setState({ subsHigh: value[1] })\n    }\n\n    handleLibSizeChange(value) {\n        this.setState({ libSizeLow: value[0] })\n        this.setState({ libSizeHigh: value[1] })\n    }\n\n    handleViewsPerChange(value) {\n        this.setState({ viewsPerLow: value[0] })\n        this.setState({ viewsPerHigh: value[1] })\n    }\n\n    handleViewsGrowthChange(value) {\n        this.setState({ viewsGrowthLow: value[0] })\n        this.setState({ viewsGrowthHigh: value[1] })\n    }\n\n    handleSubsGrowthChange(value) {\n        this.setState({ subsGrowthLow: value[0] })\n        this.setState({ subsGrowthHigh: value[1] })\n    }\n\n    executeChannelSearch() {\n        getFindChannels(this.state.searchString,this.state.country, this.state.language, this.state.producer, \n                        this.state.rankingLow, this.state.rankingHigh, this.state.viewsLow, this.state.viewsHigh,\n                        this.state.subsLow, this.state.subsHigh, this.state.libSizeLow, this.state.libSizeHigh,\n                        this.state.viewsPerLow, this.state.viewsPerHigh, this.state.viewsGrowthLow, this.state.viewsGrowthHigh,\n                        this.state.subsGrowthLow, this.state.subsGrowthHigh).then(res => {  \n            this.setState({ channelsQueryResults: res.results })\n        })\n    }\n\n    executeSelectedSearch(Ranking) {\n        getChannel(Ranking).then(res => {    // \n            this.setState({ selectedQueryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(Ranking).then(res => {    // \n            this.setState({ selectedTrendingQueryResults: res.results })\n        })\n\n        \n    }\n\n    componentDidMount() {\n\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n\n        getChannel(3430).then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(3430).then(res => {\n            this.setState({ selectedTrendingQueryResults: res.results });\n        })\n    }\n\n    ////////////////////////////////////////////////////\n    // Switch for number of recent trending (up to 5) //\n    ///////////////////////////////////////////////////\n    dynamicCarousel(){\n        switch(this.state.selectedTrendingQueryResults.length){\n            case 1: \n                return <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>;\n            case 2: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            </Carousel>;\n            case 3: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            </Carousel>;\n            case 4: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            </Carousel>;\n            case 5: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n            </Carousel>;\n\n            default: return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n        </Carousel>\n        }\n    }\n\n    render() {\n        return (\n            <div className='rootWrapper'>\n                <ChannelsHeader/> \n\n                <div className='page'>\n                    \n                    <div id=\"sideBar\">\n                        <div className='sideMenuWrapper'>\n                            <SideMenu />\n                        </div>\n                    </div>\n\n                    <div className='pageContent'>\n\n                        <div style={{ width: '70vw', margin: '0 auto' }}>\n\n                            <div className='searchMenu'>\n                                \n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchName'>Title Includes: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Input value={this.state.searchString} placeholder=\"type here\" onChange={this.handleSearchStringChange}/>\n                                            </Col>\n                                        </Row>\n                                        \n                                    </Col>\n                                    \n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchNameAlt'>Country: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={countryData[0]} style={{width: 120,}} onChange={this.handleCountryChange}>\n                                                    {countryData.map((country) => (<Option key={country}>{country}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={5}>\n                                        <Row>\n                                            <Col span={9}>\n                                                <p className='titleSearchNameAlt'>Language: </p>\n                                            </Col>\n                                            <Col span={15}>\n                                                <Select defaultValue={languageData[0]} style={{width: 120,}} onChange={this.handleLanguageChange}>\n                                                    {languageData.map((language) => (<Option key={language}>{language}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchNameAlt'>Type: </p>\n                                            </Col>\n                                            <Col span={12}>\n                                                <Select defaultValue={producerData[0]} style={{width: 120,}} onChange={this.handleProducerChange}>\n                                                    {producerData.map((producer) => (<Option key={producer}>{producer}</Option>))}\n                                                </Select>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n\n\n                                <Row>\n                                    <Col span={6}>\n\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Rank: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider tipFormatter={numFormatter} range defaultValue={[1, 10000]} \n                                                min={1} max={10000} onChange={this.handleRankingChange}/>\n                                            </Col>\n                                        </Row>\n\n\n\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Views: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={1000000} max={194000000000} defaultValue={[2000000, 194000000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Subs: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range min={100000} max={218000000} defaultValue={[100000, 218000000]} \n                                                tipFormatter={numFormatter} onChange={this.handleSubsChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col span={6}>\n                                        <Row>\n                                            <Col span={8}>\n                                                <p className='titleSearchName'>Lib-Size: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[10, 50000]} min={10} max={50000} \n                                                tipFormatter={numFormatter} onChange={this.handleLibSizeChange}/>\n                                            </Col>\n                                        </Row>   \n                                    </Col>\n\n                                </Row>\n                                <Row>\n                                    <Col span={8}>\n                                        <Row>\n                                            <Col span={12}>\n                                                <p className='titleSearchName'>Views per Video: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[100000, 100000000]} min={100000} max={100000000} \n                                                tipFormatter={numFormatter} onChange={this.handleViewsPerChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>View Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleViewsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={7}>\n                                        <Row>\n                                            <Col span={10}>\n                                                <p className='titleSearchName'>Sub Growth: </p>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Slider range defaultValue={[-1, 1]} min={-1} max={1} step={0.01} \n                                                tipFormatter={growthFormatter} onChange={this.handleSubsGrowthChange}/>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={2}>\n                                        <Button className='searchIcon' style={{display: 'flex','justify-content': 'center','align-items': 'center', backgroundColor:'#d2001a'}} \n                                        shape=\"circle\" onClick={this.executeChannelSearch} \n                                        icon={<SearchOutlined style={{color:'whiteSmoke', fontSize: '18px','margin-left': 'auto', 'margin-right': 'auto', display: 'block !important'}}/>}></Button>\n                                    </Col>\n                                    \n                                </Row>\n                            </div>\n                            <div className='tableContainer'>\n                                <Table className='channelTable' tableLayout='fixed' onRow={(record, rowIndex) => {\n                                    return {\n                                    onClick: event => {this.executeSelectedSearch(record.Ranking)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                                    };\n                                    }} dataSource={this.state.channelsQueryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                                            \n                                            <Column className='channelTable' title=\"Ranking\" dataIndex=\"Ranking\" key=\"Ranking\" sorter= {(a, b) => a.Ranking-b.Ranking}/>\n                                            <Column title=\"Title\" dataIndex=\"Title\" key=\"Title\" sorter= {(a, b) => a.Title.localeCompare(b.Title)}/>\n                                            <Column title=\"Country\" dataIndex=\"country\" key=\"country\" sorter= {(a, b) => a.country.localeCompare(b.country)}/> {/* Need a way to deal with null here...*/}\n                                            <Column title=\"Language\" dataIndex=\"language\" key=\"language\" sorter= {(a, b) => a.language.localeCompare(b.language)}/>\n                                            \n                                            <ColumnGroup title=\"Viewership\">\n                                                <Column title=\"Subscribers\" dataIndex=\"subscribers\" key=\"subscribers\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.subscribers-b.subscribers}/>\n                                                <Column title=\"Total Views\" dataIndex=\"views\" key=\"views\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.views-b.views}/>\n                                            </ColumnGroup>\n                                </Table>\n                            </div>\n                            \n                        </div>\n\n\n\n                        {/* \n                        /////////////////////////////////////////////////////////////\n                        ////  Selected Channel will display via below structure /////\n                        /////////////////////////////////////////////////////////////\n                                                                                    */}\n                        <Divider />\n                        {this.state.selectedChannelDetails ? \n                        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}> \n                            \n\n                            {/*    START OF SELECTED CHANNEL CONTAINER    */}    \n                            <h1 lex={2} className='selectedChannelName'>{this.state.selectedChannelDetails.channel_title}</h1>\n                                \n                            <Row className='selectedContainer'>\n\n                                {/*    START OF SELECTED CHANNEL STATS SECTION OF CONTAINER   */}    \n                                <Col className='channelStats' span={6}>\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center', margin: '0rem', padding: '0rem'}}>\n                                            <h3 className='statTopTitle'>Channel<br></br>Statistics</h3>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Divider className='cardDivider'/>\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center'}}>\n                                            <h4 className='statSectionTitle'>All Time</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views)}</p>\n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers)}</p>\n                                        </Col>\n                                    </Row>\n\n\n\n                                    <Divider className='cardDivider'/>\n\n\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'center' }}>\n                                        <h4 className='statSectionTitle'>Last 3 Months</h4>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2}  style={{ textAlign: 'left' }}>\n                                                <p className='statTitle'>Views</p>\n                                        </Col>\n                                        <Col flex={2}  style={{ textAlign: 'right' }}>\n                                                <p className='statTitle'>Subs</p>\n                                        </Col>\n                                    </Row>\n\n                                    <Row gutter='30' align='middle' justify='center'>\n                                        <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.view_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                    {growthFormatter(this.state.selectedChannelDetails.view_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                            \n                                        </Col>\n\n                                        <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers_l3m)}\n                                                <br></br>\n                                                <p className={this.state.selectedChannelDetails.subscriber_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                {growthFormatter(this.state.selectedChannelDetails.subscriber_growth_rate_l3m)}\n                                                </p>\n                                            </p>\n                                        </Col>\n                                    </Row>\n\n                                    <Divider className='cardDividerBottom'/>\n\n                                </Col>\n\n                        {/*    START OF TRENDING VIDEO SECTION OF CONTAINER    */}\n                                \n                                <Col className='recentTrendingContainer' span={18}>\n                                    <Row className='trendingVideoSectionTitle'>\n                                        <h3 className='trendingTopTitle'>Most Recent Trending Videos</h3>\n                                    </Row>\n\n                                        {this.state.selectedTrendingQueryResults == null || this.state.selectedTrendingQueryResults.length < 1 ?\n                                        <Row className='noRecentTrends'>\n                                            <h3 className='noRecentTrendsText'>\n                                                No Recently Trending Videos\n                                            </h3>\n                                        </Row>: <Row className='carouselSection'>\n                                                {this.dynamicCarousel()}\n                                            </Row>}\n                                        \n                                    \n                                </Col>\n                            </Row>\n                                \n                            {/* </Container> */}\n                            {/* <Footer></Footer> */}\n                            \n                        </div> : null}\n                        <Divider />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",["107","108","109","110","111","112"],"import React from 'react';\nimport './TrendingVideosPage.css'\nimport HeaderBar from '../components/HeaderBar';\nimport { getTrendingVideos } from '../fetcher'\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport Navbar from '../components/Navbar';\nimport loadIcon from '../images/load-icon.png';\nimport axios from 'axios';\n\nimport {\n  Table,\n  Select,\n} from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n/*\nconst videoDetails = [\n  //title, trending_date, likes, thumbnail_link\n  {\n    title: 'Video Title',\n    dataIndex: 'title',\n    key: '1',\n    sorter: (a, b) => a.title.localeCompare(b.title),\n  },\n  {\n    title: 'Trending Date',\n    dataIndex: 'trending_date',\n    key: '2',\n    sorter: (a, b) => a.trending_date.localeCompare(b.trending_date)\n  },\n  {\n    title: 'Likes',\n    dataIndex: 'likes',\n    key: '3',\n    sorter: (a, b) => a.likes.localeCompare(b.likes)\n  },\n  {\n    title: 'Picture Thumbnail',\n    dataIndex: 'thumbnail_link',\n    key: '4'\n  }\n];\n*/\n\n\nclass TrendingVideosPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchTerm: \"\",\n      videoResults: [],\n      pageCount: 1,\n      loadLimit: 2,\n      offset: this.getRandomOffset(),\n      country: \"United States\",\n      trendStart: \"\",\n      trendStop: \"\",\n      publishStart: \"\",\n      publishStop: \"\",\n\n      videoTitleString: \"\",\n      channelTitleString: \"\",\n      tagString: \"\",\n      channelLanguage: \"Select\",\n      categoryString: \"\",\n\n      viewsLow: 0,\n      viewsHigh: 0,\n      likesLow: 0,\n      likesHigh: 0,\n      dislikesLow: 0,\n      dislikesHigh: 0,\n      commentsLow: 0,\n      commentsHigh: 0,\n      subscribersLow: 0,\n      subscribersHigh: 0,\n      libraryLow: 0,\n      libraryHigh: 0\n    }\n\n    this.handleMorePages = this.handleMorePages.bind(this)\n    this.handleUpdateVideos = this.handleUpdateVideos.bind(this)\n    this.handleCountryChange = this.handleCountryChange.bind(this)\n    this.handleLanguageChange = this.handleLanguageChange.bind(this)\n    this.removeOffsetAndUpdate = this.removeOffsetAndUpdate.bind(this)\n\n    this.handleUpdateTrendStart = this.handleUpdateTrendStart.bind(this)\n    this.handleUpdateTrendStop = this.handleUpdateTrendStop.bind(this)\n    this.handleUpdatePublishStart = this.handleUpdatePublishStart.bind(this)\n    this.handleUpdatePublishStop = this.handleUpdatePublishStop.bind(this)\n\n    this.handleVideoTitleString = this.handleVideoTitleString.bind(this)\n    this.handleChannelTitleString = this.handleChannelTitleString.bind(this)\n    this.handleTagString = this.handleTagString.bind(this)\n    this.handleCategoryString = this.handleCategoryString.bind(this)\n\n    this.handleUpdateLikesLow = this.handleUpdateLikesLow.bind(this)\n    this.handleUpdateLikesHigh = this.handleUpdateLikesHigh.bind(this)\n    this.handleUpdateDislikesLow = this.handleUpdateDislikesLow.bind(this)\n    this.handleUpdateDislikesHigh = this.handleUpdateDislikesHigh.bind(this)\n    this.handleUpdateViewsLow = this.handleUpdateViewsLow.bind(this)\n    this.handleUpdateViewsHigh = this.handleUpdateViewsHigh.bind(this)\n    this.handleUpdateCommentsLow = this.handleUpdateCommentsLow.bind(this)\n    this.handleUpdateCommentsHigh = this.handleUpdateCommentsHigh.bind(this)\n    this.handleUpdateSubscribersLow = this.handleUpdateSubscribersLow.bind(this)\n    this.handleUpdateSubscribersHigh = this.handleUpdateSubscribersHigh.bind(this)\n    this.handleUpdateLibraryLow = this.handleUpdateLibraryLow.bind(this)\n    this.handleUpdateLibraryHigh = this.handleUpdateLibraryHigh.bind(this)\n  }\n\n  getRandomOffset(){\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n  \n    let randomRow = getRandomInt(2000);\n    return randomRow;\n  };\n\n  removeOffsetAndUpdate(value){\n    this.setState({offset: value}, this.handleUpdateVideos);\n  }\n\n  handleUpdateVideos() {\n    getTrendingVideos(this.state.country, this.state.channelLanguage, this.state.pageCount, this.state.offset, this.state.trendStart, this.state.trendStop, \n      this.state.publishStart, this.state.publishStop, this.state.videoTitleString, this.state.channelTitleString, this.state.tagString, this.state.categoryString,\n      this.state.viewsLow, this.state.viewsHigh, this.state.likesLow, this.state.likesHigh, this.state.dislikesLow, this.state.dislikesHigh, \n      this.state.commentsLow, this.state.commentsHigh,this.state.subscribersLow, this.state.subscribersHigh, this.state.libraryLow, this.state.libraryHigh).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  }\n\n  handleVideoTitleString(value){\n    this.setState({videoTitleString: value})\n  }\n\n  handleChannelTitleString(value){\n    this.setState({channelTitleString: value})\n  }\n\n  handleTagString(value){\n    this.setState({tagString: value})\n  }\n\n  handleLanguageChange(value){\n    this.setState({channelLanguage: value})\n  }\n\n  handleCategoryString(value){\n    this.setState({categoryString: value})\n  }\n\n  handleUpdateViewsLow(value){\n    this.setState({viewsLow: value})\n  }\n\n  handleUpdateViewsHigh(value){\n    this.setState({viewsHigh: value})\n  }\n\n  handleUpdateLikesLow(value){\n    this.setState({likesLow: value})\n  }\n\n  handleUpdateLikesHigh(value){\n    this.setState({likesHigh: value})\n  }\n\n  handleUpdateDislikesLow(value){\n    this.setState({dislikesLow: value})\n  }\n\n  handleUpdateDislikesHigh(value){\n    this.setState({dislikesHigh: value})\n  }\n\n  handleUpdateCommentsLow(value){\n    this.setState({commentsLow: value})\n  }\n\n  handleUpdateCommentsHigh(value){\n    this.setState({commentsHigh: value})\n  }\n\n  handleUpdateSubscribersLow(value){\n    this.setState({subscribersLow: value})\n  }\n\n  handleUpdateSubscribersHigh(value){\n    this.setState({subscribersHigh: value})\n  }\n\n  handleUpdateLibraryLow(value){\n    this.setState({libraryLow: value})\n  }\n\n  handleUpdateLibraryHigh(value){\n    this.setState({libraryHigh: value})\n  }\n\n  handleUpdatePublishStart(value){\n    this.setState({publishStart: value})\n  }\n\n  handleUpdatePublishStop(value){\n    this.setState({publishStop: value})\n  }\n\n  handleUpdateTrendStart(value){\n    this.setState({trendStart: value})\n  }\n\n  handleUpdateTrendStop(value){\n    this.setState({trendStop: value})\n  }\n\n  handleMorePages(){\n    this.setState({pageCount: (this.state.pageCount + 1)},this.handleUpdateVideos);\n  }\n\n  handleCountryChange(value){\n    this.setState({country: value})\n  }\n\n  handleLanguageChange(value){\n    this.setState({channelLanguage: value})\n  }\n\n  componentDidMount() {\n    getTrendingVideos(this.state.country, this.state.channelLanguage, this.state.pageCount, this.state.offset, this.state.trendStart, this.state.trendStop, \n      this.state.publishStart, this.state.publishStop, this.state.videoTitleString, this.state.channelTitleString, this.state.tagString, this.state.categoryString,\n      this.state.viewsLow, this.state.viewsHigh, this.state.likesLow, this.state.likesHigh, this.state.dislikesLow, this.state.dislikesHigh, \n      this.state.commentsLow, this.state.commentsHigh,this.state.subscribersLow, this.state.subscribersHigh, this.state.libraryLow, this.state.libraryHigh).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  };\n\n  render() {\n\n    return (\n      \n      <div className='outerDiv'> \n\n        <HeaderBar handleCountryChange={this.handleCountryChange} handleUpdateTrendStart={this.handleUpdateTrendStart} handleUpdateTrendStop={this.handleUpdateTrendStop}\n        handleUpdatePublishStart={this.handleUpdatePublishStart} handleUpdatePublishStop={this.handleUpdatePublishStop}\n        removeOffsetAndUpdate={this.removeOffsetAndUpdate} handleVideoTitleString={this.handleVideoTitleString}\n        handleChannelTitleString={this.handleChannelTitleString} handleTagString={this.handleTagString} handleCategoryString={this.handleCategoryString}\n        handleUpdateViewsLow={this.handleUpdateViewsLow} handleUpdateViewsHigh={this.handleUpdateViewsHigh} handleUpdateLikesLow={this.handleUpdateLikesLow} handleUpdateLikesHigh={this.handleUpdateLikesHigh} \n        handleUpdateDislikesLow={this.handleUpdateDislikesLow} handleUpdateDislikesHigh={this.handleUpdateDislikesHigh} handleUpdateCommentsLow={this.handleUpdateCommentsLow} handleUpdateCommentsHigh={this.handleUpdateCommentsHigh} \n        handleUpdateLibraryLow={this.handleUpdateLibraryLow} handleUpdateLibraryHigh={this.handleUpdateLibraryHigh} handleLanguageChange={this.handleLanguageChange}\n        handleUpdateSubscribersLow={this.handleUpdateSubscribersLow} handleUpdateSubscribersHigh={this.handleUpdateSubscribersHigh}\n        />\n        \n        <div id=\"page\">\n          <div id=\"sideBar\">\n              <Navbar />\n          </div>\n        \n          <div id=\"pageContent\">\n            <div style={{ width: '70vw', margin: '0 auto',  marginBottom: '5vh' }}>\n              <Grid>\n                \n                {this.state.videoResults.map(video=>(\n                  <VideoThumbnail\n                    thumbLink = {video.thumbnail_link}\n                    videoId = {video.video_id}\n                    videoTitle = {video.video_title}\n                  />\n                ))}\n                \n              </Grid>\n              <div >\n                {this.state.pageCount <= this.state.loadLimit && (\n                  <button id=\"loadMoreBtn\" onClick={this.handleMorePages}>Load More Videos</button>\n                )}\n              \n              </div>\n\n            <div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    )\n  };\n\n}\n\nexport default TrendingVideosPage\n\n\n\n/*\n<Table onRow={(record, rowIndex) => {\n            //return {\n             // onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n            //};\n          }} dataSource={this.state.videoResults} rowKey={'key'} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n            <ColumnGroup title=\"Random Videos\">\n              <Column title=\"Video Title\" dataIndex=\"title\" sorter= {(a, b) => a.title.localeCompare(b.title)}/>\n              <Column title=\"Trending Date\" dataIndex=\"trend_start\" sorter= {(a, b) => a.trend_start.localeCompare(b.trend_start)}/>\n              <Column title=\"Trending Date\" dataIndex=\"trend_stop\" sorter= {(a, b) => a.trend_stop.localeCompare(b.trend_stop)}/>\n              <Column title=\"Likes\" dataIndex=\"likes\" sorter= {(a, b) => a.likes.localeCompare(b.likes)}/>\n              <Column title=\"Picture Thumbnail\" dataIndex=\"thumbnail_link\"/>\n            </ColumnGroup>\n          </Table>  \n*/","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React from 'react';\nimport SideMenu from '../components/SideMenu';\nimport './VideoPage.css'\nimport { getHomeVideos, getSingleVideo, getCountryGantt } from '../fetcher'\nimport HeaderBar from '../components/HeaderBar';\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport { useParams } from 'react-router-dom';\nimport HeaderLogo from '../components/HeaderLogo';\nimport LikeButton from '../components/LikeButton';\nimport { Chart } from \"react-google-charts\";\nimport { useState } from 'react';\n\nimport {\n  Table,\n  Select,\n  Row,\n  Col\n} from 'antd'\n\nimport { ControlFilled } from '@ant-design/icons';\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nfunction numFormatter(num) {\n  let absNum = num;\n  \n  if(num < 0){\n      absNum = Math.abs(num);\n  }\n  if(absNum >= 1000 && absNum < 1000000){\n      return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n  }else if(absNum >= 1000000 && absNum < 1000000000){\n      return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n  }else if(absNum >= 1000000000){\n      return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n  }else if(absNum < 900){\n      return num; // if num < 1000, do nothing\n  }\n}\n\nconst columns = [\n  { type: \"string\", label: \"Task ID\" },\n  { type: \"string\", label: \"Task Name\" },\n  { type: \"string\", label: \"Resource\" },\n  { type: \"date\", label: \"Start Date\" },\n  { type: \"date\", label: \"End Date\" },\n  { type: \"number\", label: \"Duration\" },\n  { type: \"number\", label: \"Percent Complete\" },\n  { type: \"string\", label: \"Dependencies\" },\n];\n\nconst rows = [[\n  \"TimePeriod\",\n  \"Time Period\",\n  \"time\",\n  new Date(2013, 2, 22),\n  new Date(2013, 5, 20),\n  null,\n  100,\n  null,\n]\n];\nconst data = [columns, ...rows];\n\n\nconst geoMapData = [\n  [\"Country\"],\n  [\"Japan\"],\n  [\"United States\"],\n  [\"Brazil\"],\n  [\"Canada\"],\n  [\"France\"],\n  [\"RU\"]\n];\n\nconst geoOptions = {\n  backgroundColor: '#000000',\n  // datalessRegionColor: '#FFFFFF',\n  colorAxis: {\n    colors: \"#ff0000\"\n  },\n  legend: \"none\",\n  tooltip: 'none',\n  keepAspectRatio: false\n  // {\n  //   showTitle: false,\n  //   textStyle: { fontSize: 14 }\n  // }\n}\n\nconst ganttColumns = [\n  { type: \"string\", label: \"Task ID\" },\n  { type: \"string\", label: \"Task Name\" },\n  { type: \"date\", label: \"Start Date\" },\n  { type: \"date\", label: \"End Date\" },\n  { type: \"number\", label: \"Duration\" },\n  { type: \"number\", label: \"Percent Complete\" },\n  { type: \"string\", label: \"Dependencies\" },\n];\n\nclass VideoPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n      this.state = {\n        fullLink: \"\",\n        videoInfo: [],\n        videoId: \"\",\n        finalTrendingDates: [],\n        finalCountriesArray: [],\n        gantHeight: \"\"\n      };\n\n      this.loadCountries = this.loadCountries.bind(this)\n      this.trendingTime = this.trendingTime.bind(this)\n  }\n\n    fetchVideoId = async () => {\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      const videoId = urlParams.get(\"videoid\");\n      this.state.videoId = videoId;\n      var linkBegin = \"https://www.youtube.com/embed/\";\n      this.state.fullLink = linkBegin + `${this.state.videoId}`;\n      window.localStorage.setItem('link', this.state.fullLink)\n    };\n\n    componentDidMount() {\n      this.fetchVideoId();\n      getSingleVideo(this.state.videoId).then(res => {\n        this.setState({ videoInfo: res.results });\n        // const map1 = this.state.videoInfo.map(x=> x.video_title);\n        // var array = JSON.parse(\"[\" + x.video_title + \"]\");\n      }).then(this.loadCountries).then(this.createDates);\n    };\n\n    loadCountries(){\n      //return this.props.videoInfo[0].countries.substring(0,3);\n      var countriesArray = [[\"Country\",\"Popularity\"]];\n\n      var countriesListObject = this.state.videoInfo.map(info =>  info.countries)\n      \n      var countriesString = JSON.stringify(countriesListObject);\n      var slicedString = countriesString.slice(2,(countriesString.length -2))\n      var countriesStringArr = slicedString.split(\",\");\n\n      if (this.state.videoInfo.description != null){\n        var descriptionText = this.state.videoInfo.map(info => info.description.substring(0, 150)) \n        this.setState({description: descriptionText})\n      }\n\n      for (var i=0; i<countriesStringArr.length; i++){\n        var countryPlaceholder = [];\n        countryPlaceholder.push(countriesStringArr[i]);\n        countryPlaceholder.push(1);\n        countriesArray.push(countryPlaceholder);;\n      }\n      //get the size of countries array Gantt chart height will be based on \n      var height = countriesArray.length *43 + 30;\n      this.setState({gantHeight: height}); \n      this.setState({finalCountriesArray : countriesArray});\n    }\n\n    createDates = async () => {\n\n      var trendingDateRows = []; \n\n      for (var idx =1; idx < this.state.finalCountriesArray.length; idx++){\n\n        await getCountryGantt(this.state.videoId, this.state.finalCountriesArray[idx][0]).then(res =>{\n\n          var countriesListObject = res.results.map(info =>  info.country)\n      \n          var countriesString = JSON.stringify(countriesListObject);\n          var slicedString = countriesString.slice(2,(countriesString.length -2))\n\n          var trendingDate = [slicedString, slicedString];\n          var trendStartObject = res.results.map(info => info.trend_start.substring(0,10));\n          var trendEndObject = res.results.map(info => info.trend_stop.substring(0,10));\n\n          var trendStartString = JSON.stringify(trendStartObject);\n          //console.log(trendStartString);\n          var slicedString = trendStartString.slice(2,(trendStartString.length -2));\n          var trendingStartStringArr = slicedString.split(\"-\"); //year-month-day \n          //console.log(trendingStartStringArr);\n          var yearS = parseInt(trendingStartStringArr[0]);\n          var monthS = parseInt(trendingStartStringArr[1]); \n          var dayS = parseInt(trendingStartStringArr[2]); \n          //push the New Date trending start into trendingDate\n          trendingDate.push(new Date(yearS, monthS, dayS));\n\n          var trendEndString = JSON.stringify(trendEndObject);\n          //console.log(trendEndString);\n          var slicedEndString = trendEndString.slice(2,(trendEndString.length -2));\n          //console.log(slicedEndString);\n          var trendingEndStringArr = slicedEndString.split(\"-\"); //year-month-day \n          //console.log(trendingEndStringArr);\n          //year\n          var year = parseInt(trendingEndStringArr[0]);\n          var month = parseInt(trendingEndStringArr[1]); \n          var day = parseInt(trendingEndStringArr[2]); \n          //console.log(trendingEndStringArr);\n          trendingDate.push(new Date(year, month, day));\n          trendingDate.push(null);\n          trendingDate.push(100);\n          trendingDate.push(null);\n\n          trendingDateRows.push(trendingDate);\n          \n        });\n      }\n\n\n      if (trendingDateRows.length == this.state.finalCountriesArray.length - 1){\n\n        const data = [ganttColumns, ...trendingDateRows]; //columns x rows \n        this.setState({finalTrendingDates : data});\n      }\n\n      return trendingDateRows\n    }\n\n    trendingTime(){\n      const columns = [\n        { type: \"string\", label: \"Task ID\" },\n        { type: \"string\", label: \"Task Name\" },\n        { type: \"date\", label: \"Start Date\" },\n        { type: \"date\", label: \"End Date\" },\n        { type: \"number\", label: \"Duration\" },\n        { type: \"number\", label: \"Percent Complete\" },\n        { type: \"string\", label: \"Dependencies\" },\n      ];\n\n      var trendingDateRows = []; \n      var trendingDate = [\"TimePeriod\", \"Time period\"];\n      var trendStartObject = this.state.videoInfo.map(info =>  info.trend_start.substring(0,10));\n      \n      var trendStartString = JSON.stringify(trendStartObject);\n      //console.log(trendStartString);\n      var slicedString = trendStartString.slice(2,(trendStartString.length -2));\n      var trendingStartStringArr = slicedString.split(\"-\"); //year-month-day \n      //console.log(trendingStartStringArr);\n      var yearS = trendingStartStringArr[0];\n      var monthS = trendingStartStringArr[1]; \n      var dayS = trendingStartStringArr[2]; \n      //push the New Date trending start into trendingDate\n      trendingDate.push(new Date(yearS, monthS, dayS));\n      \n      \n      \n\n      var trendEndObject = this.state.videoInfo.map(info =>  info.trend_stop.substring(0,10));\n\n      var trendEndString = JSON.stringify(trendEndObject);\n      //console.log(trendEndString);\n      var slicedEndString = trendEndString.slice(2,(trendEndString.length -2));\n      //console.log(slicedEndString);\n      var trendingEndStringArr = slicedEndString.split(\"-\"); //year-month-day \n      //console.log(trendingEndStringArr);\n      //year\n      var year = trendingEndStringArr[0];\n      var month = trendingEndStringArr[1]; \n      var day = trendingEndStringArr[2]; \n      trendingDate.push(new Date(year, month, day));\n      trendingDate.push(null);\n      trendingDate.push(100);\n      trendingDate.push(null);\n      //push trendingDate into trendingDateRows\n      trendingDateRows.push(trendingDate);\n\n      const rows = [\n        [\n          \"Research\",\n          \"Find sources\",\n          new Date(2015, 0, 1),\n          new Date(2015, 0, 5),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"Write\",\n          \"Write paper\",\n          null,\n          new Date(2015, 0, 9),\n          daysToMilliseconds(3),\n          25,\n          \"Research,Outline\",\n        ],\n        [\n          \"Cite\",\n          \"Create bibliography\",\n          null,\n          new Date(2015, 0, 7),\n          daysToMilliseconds(1),\n          20,\n          \"Research\",\n        ],\n        [\n          \"Complete\",\n          \"Hand in paper\",\n          null,\n          new Date(2015, 0, 10),\n          daysToMilliseconds(1),\n          0,\n          \"Cite,Write\",\n        ],\n        [\n          \"Outline\",\n          \"Outline paper\",\n          null,\n          new Date(2015, 0, 6),\n          daysToMilliseconds(1),\n          100,\n          \"Research\",\n        ],\n      ];\n\n      function daysToMilliseconds(days) {\n        return days * 24 * 60 * 60 * 1000;\n      }\n\n      const data = [columns, ...rows]; //columns x rows \n\n     \n      this.setState({finalTrendingDates : data});\n\n    }\n   \n    render() {\n      const options = {\n        textStyle: {\n          color: \"#FFFFFF\"\n        },\n        height: this.state.gantHeight,\n        backgroundColor: {fill: '#000000'},\n  \n        hAxis: {\n          // textStyle:{color: '#fff'},\n          textStyle: '#ffffff',\n          baselineColor: '#FFFFFF'\n       },\n        gantt: {\n          trackHeight: this.state.numCountries,\n         \n          criticalPathEnabled: false,\n                  criticalPathStyle: {\n                    stroke: '#e64a19',\n                    strokeWidth: 5,\n                  },\n                 \n                 \n          labelStyle: {\n            fontName: 'Arial',\n          fontSize: 18,\n          color: '#ffffff'\n          },\n          palette: [\n            {\n              \"color\": \"#ffffff\",\n              \"dark\": \"#ff0000\"\n            },\n          ]\n         \n        }, \n      };\n \n      return (\n        \n        <div className='videoRootWrapper'>\n          <div className=\"headerBar\">\n            <div className=\"headerLogo\">\n              <HeaderLogo />\n            </div>\n            \n            <div className='videoPageTitleWrapper'>\n              <h1 id=\"videoPageTitle\">Video Details</h1>\n            </div>\n          </div>\n  \n                <div id=\"page\">\n    \n                <div id=\"sideBar\">\n                    <div>\n                      <SideMenu />\n                    </div>\n                </div>\n            \n                <div className=\"videoInfo\">\n                  \n                    <iframe id=\"videoFrame\" width=\"640\" height=\"360\" \n                        src={this.state.fullLink}>\n                    </iframe>\n\n                  <div className=\"description\">\n                    <h2 className='videoDescriptor'>Title: </h2>\n                      {this.state.videoInfo.map(info => <h5 className='videoAttr'>{info.video_title}</h5>)}\n                    {<h2 className='videoDescriptor'>Description:</h2>}\n                      {this.state.videoInfo.map(info => <h5 className='videoAttr'>{info.description} </h5> ) }\n                    <h2 className='videoDescriptor'>Views:</h2>\n                      {this.state.videoInfo.map(info => <h5 className='videoAttr'> {numFormatter(info.views)}</h5>)}\n                  </div>\n\n                  <div className=\"likesNum\">\n                    <h2 className='videoDescriptor'>Likes:</h2>\n                      {this.state.videoInfo.map(info => <h5 className='videoAttr'>{numFormatter(info.likes)}</h5>)}\n                  </div>\n\n\n                  <div id=\"likeButton\">\n                    {this.state.videoInfo.map(info=>(\n                      <LikeButton\n                        thumbLink = {info.thumbnail_link}\n                        videoId = {info.video_id}\n                        videoTitle = {info.video_title}\n                      />\n                    ))}\n                  </div>\n                  \n\n                  <div id=\"geochart\">\n\n                    <h2 className='videoDescriptor'>Trending Countries:</h2>\n                      <Chart className='dataDis' chartType=\"GeoChart\" width=\"1000px\" height=\"550px\"  data={this.state.finalCountriesArray} options = {geoOptions} />\n                  </div>\n\n\n\n                  <div className=\"trending\">\n                    <h2 className='videoDescriptor'>Trending Time:</h2>\n                      <Chart id=\"countryGantt\" chartType=\"Gantt\" data={this.state.finalTrendingDates} width = \"1000px\" height = \"50%\" options={options}/>\n                 </div>\n                  \n                \n                  \n                  \n                  \n                  {/* <h2>Countries:</h2> */}\n                  <div class=\"VideoInfoArea\"></div>\n                  \n                  {/* <div className=\"viewsLikes\"> */}\n\n\n                  <div className=\"likes\">\n                  \n                     \n                  \n                  </div>\n                  <div className=\"bottom\"></div>\n\n                  \n                </div>\n                    \n                </div>\n            \n            \n            </div>\n        // </div>\n      )\n    };\n  \n  }\n  \n \n  export default VideoPage;\n\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/Login.js",["130","131","132","133"],"import './Login.css';\nimport {gapi} from 'gapi-script';\nimport { useReducer, useEffect, useState } from 'react';\nimport HeaderLogo from '../components/HeaderLogo';\nimport React from 'react';\nimport image from '../images/whatsapp2.webp';\nimport { GoogleLogin } from 'react-google-login';\n\nvar clicked = false;//Global Variable\n\nconst CLIENT_ID = \"1034575332123-8tgla9079nd652nlfttj4lmub58up4ke.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyCrG2ljgMyqUl9JS-mdHwrKZbbGscficYo\"\n\n\nfunction Login() {\n\n  const [userName, setUserName] = useState('');\n  const [passWord, setPassword] = useState('');\n\n  const onSuccess = (googleData) => {\n\n    sessionStorage.setItem('userInfo', googleData.profileObj.email);\n    var user = sessionStorage.getItem('userInfo');\n\n    console.log(user);\n\n    //https://stackoverflow.com/questions/32182532/google-signin-doesnt-redirect-after-sign-out\n      var auth2 = gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed in.');\n        window.location.href='http://localhost:3000/trendingvideos';\n      })\n\n  }\n\n  const onFailure = (result) => {\n\n    alert(result);\n\n  }\n\n  useEffect(() => {\n\n    function start() {\n\n      sessionStorage.removeItem('userInfo');\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientID: CLIENT_ID\n      });\n\n    };\n\n    gapi.load('client: auth', start);\n\n  });\n\n  const handleSubmit = event => {\n\n    event.preventDefault();\n\n    //Get input values on Form submit in React\n    //https://bobbyhadz.com/blog/react-get-form-input-value-on-submit#:~:text=To%20get%20input%20values%20on,fields%20in%20your%20handleSubmit%20function.\n    sessionStorage.setItem('userInfo', userName);\n    var user = sessionStorage.getItem('userInfo');\n\n    console.log(user);\n\n    window.location.href='http://localhost:3000/trendingvideos';\n\n  };\n\n  return (\n    <div class = \"Login\">\n      <HeaderLogo id=\"loginLogo\" />\n      \n      <h2 id=\"startingText\" class=\"white-text\">CIS 550 Project: Bug Busters</h2>\n      <p class=\"white-text\">(Derek Taylor, Zan Zhang, Sanjeeva Rajapakse, Angela Fan, Fred Qi)</p>\n      <h3 class=\"white-text\">Login Page</h3>\n      <form onSubmit={handleSubmit}>\n      <fieldset>\n         <label>\n           <h5 class=\"white-text\">Username/Email</h5>\n           <input name=\"Username\" onChange={event => setUserName(event.target.value)} />\n         </label>\n       </fieldset>\n       <fieldset>\n         <label>\n           <h5 class=\"white-text\">Password</h5>\n           <input name=\"Password\" onChange={event => setPassword(event.target.value)} />\n         </label>\n       </fieldset>\n       <button id=\"loginButtonSubmit\" type=\"submit\">Submit</button>\n      </form>\n      <div class='loginGoogle'>\n      <GoogleLogin\n                id = 'g-login'\n                clientId={CLIENT_ID}\n                buttonText=\"Login with Google\"\n                onSuccess= {onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={false}\n            />\n        </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/SavedVideos.js",["134","135","136","137","138","139","140","141","142"],"import React from 'react';\nimport SideMenu from '../components/SideMenu';\nimport './SavedVideos.css'\nimport './TrendingVideosPage.css'\nimport { getFavoritedVideos, getRecommendedVideos, getSingleVideo } from '../fetcher'\nimport HeaderBar from '../components/HeaderBar';\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport { useParams } from 'react-router-dom';\nimport HeaderLogo from '../components/HeaderLogo';\nimport LikeButton from '../components/LikeButton';\nimport loadIcon from '../images/load-icon.png';\n\n\n\n\nimport {\n  Table,\n  Select\n} from 'antd'\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nvar fullLink = null\nvar linkBegin = \"https://www.youtube.com/embed/\";\nif (window.localStorage.getItem('likedLink')== null){\n  fullLink = \"https://www.youtube.com/embed/__4i6CIg82o\"\n  console.log(\"Nothing for cookie\")\n}\nelse{\n  fullLink = window.localStorage.getItem('likedLink');\n  // videoId= fullLink.substring(fullLink.lastIndexOf('/')+1) ;\n}\n\n\n\nclass VideoPage extends React.Component {\n    \n  constructor (props){\n\n      super(props);\n    //   this.state={\n    //     videoInfo : [],\n    //     videoId : \"\"\n    //   };\n\n    //   this.handleRecommendation = this.handleRecommendation.bind(this);\n    // }\n\n    // handleRecommendation(){\n    //   this.state.videoId = fullLink.substring(fullLink.lastIndexOf('/')+1) ;\n    //   getRecommendedVideo(this.state.videoId).then(res => {\n    //     this.setState({ videoInfo: res.results });\n    //   })\n    // };\n    this.state = {\n      user: sessionStorage.getItem('userInfo'),\n      videoResults: [],\n      fullLink: \"\",\n      videoInfo: [],\n      videoId: \"\"\n    };\n  \n  }\n\n    fetchVideoId = async () => {\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      const videoId = urlParams.get(\"videoid\");\n      if ( fullLink== null){\n        this.state.videoId = videoId\n        console.log(\"Nothing is here\");\n      }\n      else{\n        this.state.videoId = fullLink.substring(fullLink.lastIndexOf('/')+1);\n      }\n      \n    };\n\n    handleUpdateVideos() {\n      getFavoritedVideos(this.state.user).then(res => {\n        this.setState({ videoResults: res.results });\n      })\n    }\n  \n    componentDidMount() {\n      this.fetchVideoId();\n\n      getFavoritedVideos(this.state.user).then(res => {\n        this.setState({ videoResults: res.results });\n      })\n    \n      getRecommendedVideos(this.state.videoId).then(res => {\n        this.setState({ videoInfo: res.results });\n        // const map1 = this.state.videoInfo.map(x=> x.video_title);\n        // var array = JSON.parse(\"[\" + x.video_title + \"]\");\n        // console.log(array);\n      })\n    \n    };\n    \n\n\n    // componentDidMount() {\n    //     getSingleVideo(videoId).then(res => {\n    //       this.setState({ videoInfo: res.results });\n    //       // const map1 = this.state.videoInfo.map(x=> x.video_title);\n    //       // var array = JSON.parse(\"[\" + x.video_title + \"]\");\n    //       // console.log(array);\n    //     })\n    //   };\n    \n   \n    render() {\n  \n      return (\n        \n        <div className = \"rootWrapper\">\n          <div className=\"headerBar\">\n\n            <div className=\"headerLogo\">\n              \n              <HeaderLogo />\n            </div>\n\n            <div className='videoPageTitleWrapper'>\n\n              <h1 id=\"videoPageTitle\">Liked Videos Playlist</h1>\n\n            </div>\n\n            </div>\n  \n            <div id=\"page\">\n            \n    \n                <div id=\"sideBar\">\n                    <div className='sideMenuWrapper'>  \n                    <SideMenu />\n                    </div>\n                </div>\n                <div className=\"videoInfo\" style = {{fontSize:'15px'}}>\n                  <div className='likedPlaylist'>\n\n                    <Grid>\n                \n                      {this.state.videoResults?.map(video=>(\n                        <VideoThumbnail\n                          thumbLink = {video.thumbnail_link}\n                          videoId = {video.video_id}\n                          videoTitle = {video.video_title}\n                        />\n                      ))}\n                \n                   </Grid>\n\n                  </div>\n                  \n\n                  {/* recommendedVideos page */}\n                <div id=\"pageContent\">\n                      <div className='recPlaylist'>\n                  <p id=\"pageTitle\">{this.state.searchTerm ? 'recommended videos' : 'Recommended Videos'}</p>\n                 \n                          <div class =\"fade-in-videos\" style = {{fontSize:'15px'}}>\n                              <Grid>\n                              {this.state.videoInfo.map(video=>(\n                              <VideoThumbnail\n                                // src = {linkBegin + `${video.videoId}`}\n                                  thumbLink = {video.thumbnail_link}\n                                  videoTitle = {video.video_title.substring(0,20)+\"...\" }\n                                  Country = {video.channel_title}\n                                  videoId = {video.video_id}\n                                \n                              />\n                              ))}\n                              </Grid>\n                          </div>\n                      </div>      \n                  </div>         \n              </div>    \n            </div>\n       </div>\n      )\n    };\n  \n  }\n  \n \n  export default VideoPage;\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/FavoritedVideos.js",["143","144","145","146","147"],"import React from 'react';\nimport './TrendingVideosPage.css'\nimport FavoritedHeader from '../components/FavoritedHeader';\nimport { getFavoritedVideos, getTrendingVideos } from '../fetcher'\nimport Grid from '../components/Grid';\nimport VideoThumbnail from '../components/VideoThumbnail';\nimport Navbar from '../components/Navbar';\nimport loadIcon from '../images/load-icon.png';\n\nimport {\n  Table,\n  Select,\n} from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nclass FavoritedVideosPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      user: sessionStorage.getItem('userInfo'),\n      videoResults: [],\n      videoid: \"--0bCF-iK2E\"\n    }\n\n  }\n\n  handleUpdateVideos() {\n    getFavoritedVideos(this.state.user).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  }\n\n  componentDidMount() {\n    getFavoritedVideos(this.state.user).then(res => {\n      this.setState({ videoResults: res.results });\n    })\n  };\n\n  render() {\n\n    return (\n      \n      <div className='outerDiv'>\n        <FavoritedHeader/>\n        \n        <div id=\"page\">\n          <div id=\"sideBar\">\n              <Navbar />\n          </div>\n        \n          <div id=\"pageContent\">\n            <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh', marginBottom: '5vh' }}>\n              <Grid>\n                \n                {this.state.videoResults?.map(video=>(\n                  <VideoThumbnail\n                    thumbLink = {video.thumbnail_link}\n                    videoId = {video.video_id}\n                    videoTitle = {video.video_title}\n                  />\n                ))}\n                \n              </Grid>\n\n            <div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    )\n  };\n\n}\n\nexport default FavoritedVideosPage\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js",["148","149","150"],"import React from \"react\";\nimport \"./TrendingVideoCard.css\";\n\nimport {\n    Row,\n    Col\n} from 'antd'\n\n\n\n\nconst prototype = [{\"title\":\"I’ve Got a Huge Secret Hiding Behind This Fake Office\",\"published\":\"2022-06-15T04:00:00.000Z\",\"video_id\":\"h8g9wfI9nGI\",\"views\":9075972,\"trend_stop\":\"2022-06-18T04:00:00.000Z\",\"trend_start\":\"2022-06-16T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Pranks Destroy Scam Callers- GlitterBomb Payback\",\"published\":\"2022-05-08T04:00:00.000Z\",\"video_id\":\"xsLJZyih3Ac\",\"views\":30868590,\"trend_stop\":\"2022-05-17T04:00:00.000Z\",\"trend_start\":\"2022-05-09T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Robot Piano Catches Fire Playing Rush E (World’s Hardest Song)\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":9185225,\"trend_stop\":\"2022-03-27T04:00:00.000Z\",\"trend_start\":\"2022-03-27T04:00:00.000Z\",\"countries\":\"United Kingdom\"},{\"title\":\"This Piano Speaks English\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":8014045,\"trend_stop\":\"2022-03-26T04:00:00.000Z\",\"trend_start\":\"2022-03-20T04:00:00.000Z\",\"countries\":\"Canada,Germany,United Kingdom,United States\"},{\"title\":\"World's Largest T-Shirt Cannon\",\"published\":\"2021-12-20T05:00:00.000Z\",\"video_id\":\"QiKZYt9070U\",\"views\":6387831,\"trend_stop\":\"2021-12-22T05:00:00.000Z\",\"trend_start\":\"2021-12-21T05:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"}];\n\n\nfunction TrendingVideoCard({data, num}) {\n\n    function numFormatter(num) {\n        if(num >= 1000 && num < 1000000){\n            return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n        }else if(num >= 1000000 && num < 1000000000){\n            return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n        }else if(num >= 1000000000){\n            return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n        }else if(num < 900){\n            return num; // if num < 1000, do nothing\n        }\n    }\n\n    \n\n    let record_data = data;\n    \n    let days = record_data.trend_stop - record_data.trend_stop;\n\n    let countries = \"\";\n\n    if(record_data.countries.includes(\",\")){\n        countries = (record_data.countries).split(\",\").join(\" \");\n    }else{\n        countries = record_data.countries\n    }\n    \n\n    const trend_start = new Date(record_data.trend_start.slice(0,19));\n    const trend_stop = new Date(record_data.trend_stop.slice(0,19));\n\n    const trend_duration_ms = trend_stop.getTime() - trend_start.getTime();\n    let trend_duration_hr = (trend_duration_ms / 3600000).toFixed(0);\n\n    let gradient = \"videoThumbnailSection\"+num;\n\n    if (trend_duration_hr < 24){\n        trend_duration_hr = '< 24'\n    }\n\n    let img_url = \"https://i.ytimg.com/vi/\"+ record_data.video_id + \"/hqdefault.jpg\";\n    let watch_url = '/video?videoid=' + record_data.video_id\n\n\n    return (\n        <div className=\"videoCard\">\n            <Row className='trendingVideoNameSection'>\n                <Col className='trendingVideoNameSection' onClick={watch_url}>\n                    <Row className='videoTitleContainer'>\n                        <h4 className='videoTitle'>{record_data.title}</h4>\n                    </Row>\n                    \n                    <Row>\n                        <Col span={6}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Views:</b> {numFormatter(record_data.views)}</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Trending for:</b> {trend_duration_hr} hours</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Published:</b> {record_data.published.slice(0,10)}</h5>\n                        </Col>\n                    </Row>\n                </Col>\n                \n            </Row>\n            \n            <Row className={gradient}>\n                <Col span={6}>\n                    <h5 className='videoDataCountries'><b className=\"videoDataTitle\">Countries:</b><br></br>{countries}</h5>\n                </Col>\n                <Col span={18}>\n                    <a href={watch_url}><img className='videoTile' src={img_url}/></a>\n                </Col>\n            </Row>\n        </div>\n    );\n }\n\n \n\nexport default TrendingVideoCard;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/ChannelsHeader.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, {useState} from 'react';\n// import './Grid.css';\nimport './ChannelsHeader.css';\nimport HeaderLogo from '../components/HeaderLogo';\n// import SearchBar from '../components/SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass ChannelsHeader extends React.Component {\n\n    render(){\n        return(\n          <div className=\"chanHeadBar\">\n\n            <div className=\"chanHeaderLogo\">\n                <HeaderLogo />\n            </div>\n\n            <div className=\"chanHeaderExLogo\">\n                <h1 className='chanPageTitle'>Channel Search</h1>\n            </div>\n            \n          </div>\n        )\n    }\n}\n\nexport default ChannelsHeader\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js",["166"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport './VideoThumbnail.css';\n\n\nconst VideoThumbnail = ({thumbLink, videoId, videoTitle}) => {\n\n  \n  const [imgSrc, setImgSrc] = useState(thumbLink);\n  \n  const errorHandler = event => {\n    setImgSrc(\"https://i.ytimg.com/vi/dQw4w9WgXcQ/mqdefault.jpg\");\n    console.log(imgSrc)\n  }\n\n  return(\n    <div>\n      <Link to={`/video?videoid=${videoId}`}>\n        <p1 className=\"videoTitle\">{videoTitle}</p1>\n        <img className=\"thumbnail\" src={thumbLink} alt='video-thumb'/>\n      </Link>\n    </div>\n  )\n}\n\n  \n\nexport default VideoThumbnail;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js",["167","168","169","170","171","172","173","174","175","176"],"import React, {useState} from 'react';\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport Navbar from './Navbar';\nimport HeaderLogo from './HeaderLogo';\n\nimport './SideMenu.css';\n\n\nclass SideMenu extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n    <>\n      <div className=\"navigation\">\n      <Navbar />\n      </div>\n    </>\n     \n    );\n  }\n}\n\nexport default SideMenu;\n\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js",["177","178","179","180","181","182","183","184","185","186"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './HeaderBar.css';\nimport HeaderLogo from '../components/HeaderLogo';\nimport ComboBox from '../components/Autocomplete';\nimport { DatePicker, Space } from 'antd';\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './TopDropdown.css';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport { Link } from 'react-router-dom';\nimport searchBarIcon from '../images/searchicon.svg';\nimport {\n    Table,\n    Select,\n    Slider,\n    Row,\n    Col,\n    Input,\n    Button\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n\nconst countryData = ['Brazil', 'Canada', 'France', 'Germany', 'India', 'Japan', 'Mexico', 'Russia', 'South Korea', 'United Kingdom', 'United States'];\nconst languageData = ['Select','Albanian', 'Arabic', 'Armenian', 'Bengali', 'Bhojpuri', 'Bosnian', 'Bulgarian', 'Catalan', 'Chichewa', \n    'Chinese', 'Croatian', 'Czech', 'Dutch', 'English', 'Estonian', 'Filipino', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', \n    'Hindi', 'Hungarian', 'Indian', 'Indonesian', 'Italian', 'Japanese', 'Kannada', 'Korean', 'Malay', 'Malayalam', 'Marathi', 'Nepali', \n    'Norwegian', 'Polish', 'Portuguese', 'Punjabi', 'Romanian', 'Russian', 'Serbian', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', \n    'Swedish', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese'];\nconst dateFormat = 'YYYY-MM-DD';\n\nconst customFormat = (value) => `custom format: ${value.format(dateFormat)}`;\n\n\nconst HeaderBar =({removeOffsetAndUpdate,handleCountryChange, handleUpdateTrendStart, \n  handleUpdateTrendStop, handleVideoTitleString, handleChannelTitleString, \n  handleTagString, handleUpdatePublishStart, handleUpdatePublishStop, handleUpdateViewsLow,\n  handleUpdateViewsHigh, handleUpdateLikesLow, handleUpdateLikesHigh, handleUpdateDislikesLow, \n  handleUpdateDislikesHigh, handleUpdateCommentsLow, handleUpdateCommentsHigh,\nhandleLanguageChange, handleUpdateSubscribersLow, handleUpdateSubscribersHigh,\nhandleUpdateLibraryLow, handleUpdateLibraryHigh, handleCategoryString})=> {\n\n  const [currentCountry, setCurrentCountry] = useState(\"United States\");\n  const [currentLanguage, setCurrentLanguage] = useState(\"Select\");\n  const [videoTitle, setVideoTitle] = useState('');\n  const [channelTitle, setChannelTitle] = useState('');\n  const [tagString, setTagString] = useState('');\n  const [categoryString, setCategoryString] = useState('');\n\n  const [dropSwitch, setDropSwitch] = useState(false);\n\n  const showDropdown = () => setDropSwitch(!dropSwitch);\n\n  const changeCountry = event => {\n    setCurrentCountry(event);\n    handleCountryChange(event);\n  }\n\n  const changeLanguage = event => {\n    console.log(event)\n    setCurrentLanguage(event);\n    handleLanguageChange(event);\n  }\n\n  const changeTrendingDates = (date, dateString) => {\n    console.log(dateString)\n    handleUpdateTrendStart(dateString[0]);\n    handleUpdateTrendStop(dateString[1]);\n  };\n\n  const changeViews = event => {\n    console.log(event)\n    handleUpdateViewsLow(event[0]);\n    handleUpdateViewsHigh(event[1]);\n  };\n\n  const changeLikes = event => {\n    console.log(event)\n    handleUpdateLikesLow(event[0]);\n    handleUpdateLikesHigh(event[1]);\n  };\n\n  const changeDislikes = event => {\n    console.log(event)\n    handleUpdateDislikesLow(event[0]);\n    handleUpdateDislikesHigh(event[1]);\n  };\n\n  const changeComments = event => {\n    console.log(event)\n    handleUpdateCommentsLow(event[0]);\n    handleUpdateCommentsHigh(event[1]);\n  };\n\n  const changeSubscribers = event => {\n    console.log(event)\n    handleUpdateSubscribersLow(event[0]);\n    handleUpdateSubscribersHigh(event[1]);\n  };\n\n  const changeLibrarySize = event => {\n    console.log(event)\n    handleUpdateLibraryLow(event[0]);\n    handleUpdateLibraryHigh(event[1]);\n  };\n\n  const changePublishedDates = (date, dateString) => {\n    console.log(dateString)\n    handleUpdatePublishStart(dateString[0]);\n    handleUpdatePublishStop(dateString[1]);\n  };\n\n  const changeVideoTitleString = (event) => {\n    console.log(event.target.value);\n    setVideoTitle(event.target.value);\n    handleVideoTitleString(event.target.value);\n  };\n\n  const changeChannelTitleString = (event) => {\n    console.log(event.target.value);\n    setChannelTitle(event.target.value);\n    handleChannelTitleString(event.target.value);\n  };\n\n  const changeTagString = (event) => {\n    console.log(event.target.value);\n    setTagString(event.target.value);\n    handleTagString(event.target.value);\n  };\n\n  const changeCategoryString = (event, value) => {\n    console.log(event.target.value);\n    console.log(value);\n    setCategoryString(event.target.value);\n    handleCategoryString(event.target.value);\n  };\n\n  const updateSearch = (event) =>{\n    removeOffsetAndUpdate(0);\n  }\n\n  function numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\n  return(\n    <div className=\"headerBar\">\n            \n        <div className=\"headerLogo\">\n          <HeaderLogo />\n        </div>\n\n        <div className=\"headerExLogo\">\n        \n\n        <div className=\"dropdownwrapper\">\n        <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='dropdown'>\n        <Link to='#' className='dropdown-bars'>\n            <FaIcons.FaBars id=\"dropdownicon\" onClick={showDropdown} />\n        </Link>\n        </div>\n        <nav className={dropSwitch ? 'dropdown active' : 'dropdown inactive'}>\n        <ul className='dropdown-click' >\n            <li className='dropdown-toggle'>\n            <Link to='#' className='dropdown-bars'>\n                <AiIcons.AiOutlineClose id=\"closebutton\" onClick={showDropdown} />\n            </Link>\n            </li>\n            \n              <div className=\"headerSearch\">\n              <Row>\n              \n                  <Col span={8}>\n                      <Row>\n                        \n                          <Col span={9}>\n                              <p className='videoTitleSearch'>Video Title: </p>\n                          </Col>\n                          <Col span={15}>\n                              <Input value={videoTitle} placeholder=\"Starts with...\" onChange={changeVideoTitleString}/>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n              \n                  <Col span={8}>\n                      <Row>\n                          <Col span={9}>\n                              <p className='channelTitleSearch'>Channel Title: </p>\n                          </Col>\n                          <Col span={15}>\n                              <Input id=\"channelTitleInput\" value={channelTitle} placeholder=\"Starts with...\" onChange={changeChannelTitleString}/>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n              \n                  <Col span={8}>\n                      <Row>\n                          <Col span={9}>\n                              <p className='categorySearch'>Category: </p>\n                          </Col>\n                          <Col span={15}>\n                          <div style={{display: 'flex'}}>\n                            <ComboBox id=\"autoCompleteInput\" value={categoryString} onChange={changeCategoryString}/>\n                            </div>\n                          </Col>\n                      </Row>\n                      \n                  </Col>\n                </Row>\n                <Row>\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='countryLabel'>Country: </p>\n                            </Col>\n                            <Col span={15} id=\"countrySelectCol\">\n                            <Select value={currentCountry} id=\"countrySelector\" onChange={changeCountry} >\n                            {countryData.map((country) => (<Option key={country} value={country}>{country}</Option>))}\n                            </Select>\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                    <Col span={9}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='selectTrendingDates'>Trending Dates: </p>\n                            </Col>\n                            <Col span={5} id=\"trendDateSelectCol\">\n                            <RangePicker\n                            defaultValue={[moment('2020-08-01', dateFormat), moment('2022-06-20', dateFormat)]}\n                            format={dateFormat} onChange={changeTrendingDates} id=\"trendDatePicker\"\n                            />\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                    <Col span={9}>\n                        <Row>\n                            <Col span={8}>\n                                <p className='selectPublishDates'>Publish Dates: </p>\n                            </Col>\n                            <Col span={5} id=\"publishDatePicker\">\n                            <RangePicker\n                            format={dateFormat} onChange={changePublishedDates}\n                            />\n                            </Col>\n                        </Row>\n                        \n                    </Col>\n\n                </Row>\n                <Row>\n                    \n                    <Col span={6}>\n\n                        <Row>\n                            <Col span={12}>\n                                <p className='viewsLabel'>Video Views: </p>\n                            </Col>\n                            <Col span={12} id=\"viewsSlider\">\n                                <Slider tipFormatter={numFormatter} range defaultValue={[0, 300000000]} \n                                min={1} max={300000000} onChange={changeViews}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='likesLabel'>Likes: </p>\n                            </Col>\n                            <Col span={15} id=\"likesSliderCol\">\n                                <Slider id=\"likesSlider\" range min={0} max={17000000} defaultValue={[0, 17000000]} \n                                tipFormatter={numFormatter} onChange={changeLikes}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='dislikesLabel'>Dislikes: </p>\n                            </Col>\n                            <Col span={15} class='sliderCol'>\n                                <Slider range min={0} max={13000000} defaultValue={[0, 13000000]} \n                                tipFormatter={numFormatter} onChange={changeDislikes}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='commentsLabel'>Comments: </p>\n                            </Col>\n                            <Col span={15} class='sliderCol'>\n                                <Slider range defaultValue={[0, 7000000]} min={0} max={7000000} \n                                tipFormatter={numFormatter} onChange={changeComments}/>\n                            </Col>\n                        </Row>   \n                    </Col>\n\n                </Row>\n\n                <Row>\n                    \n                    <Col span={6}>\n\n                        <Row>\n                            <Col span={12}>\n                                <p className='channelSubscribersLabel'>Channel Subscribers: </p>\n                            </Col>\n                            <Col span={12} id=\"channelSubscribersCol\">\n                                <Slider tipFormatter={numFormatter} range defaultValue={[1, 220000000]} \n                                min={1} max={220000000} onChange={changeSubscribers}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={9}>\n                                <p className='channelLibraryLabel'>Channel Library: </p>\n                            </Col>\n                            <Col span={14} id=\"channelLibraryCol\">\n                                <Slider id=\"librarySlider\" tipFormatter={numFormatter} range defaultValue={[0, 500000]} \n                                min={1} max={500000} onChange={changeLibrarySize}/>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6}>\n                        <Row>\n                            <Col span={8}>\n                                <p className='channelLanguageLabel'>Channel Language: </p>\n                            </Col>\n                            <Col span={10} id=\"languageCol\">\n                            <Select value={currentLanguage} id=\"languageSelector\" onChange={changeLanguage}>\n                            {languageData.map((language) => (<Option key={language} value={language}>{language}</Option>))}\n                            </Select>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col span={6} id=\"submitButtonWrap\">\n                        \n                    <div class=\"submitSearch\">\n                        <Button id=\"submitVideoSearch\" onClick={updateSearch}><img id=\"searchIcon\" src={searchBarIcon}/>Search</Button>\n                    </div>\n\n                    \n                            \n                    </Col>\n\n                </Row>\n\n                \n\n              </div>\n              </ul>\n        </nav>\n        </IconContext.Provider>\n        </div>\n              <div className=\"headerSelectors\">\n                \n              <h1 id='trendingVideosTitle'>Video Search</h1>\n              </div>\n            </div>\n            \n            \n\n        </div>\n       \n  )     \n};\n\nexport default HeaderBar;\n\n\n//{dropSwitch ? '' : 'Video Search'}","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js",["187","188","189","190","191","192","193","194","195"],"\nimport React, {useState} from 'react';\n\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport TubeDBLogo from '../images/RedLogo.svg';\n\n\n\nclass HeaderLogo extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n      <Nav justified>\n        <div id=\"header\">\n        <div id=\"headerLogo\">\n          <a href=\"./trendingvideos\">\n        <img src={TubeDBLogo} width={180} />\n        </a>\n        </div>\n        </div>\n      </Nav>\n    );\n  }\n}\n\n\nexport default HeaderLogo;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Navbar.js",["196","197","198"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport {BsFillPlayBtnFill, BsFillPersonFill, BsBookmarkHeartFill} from 'react-icons/bs';\nimport * as IoIcons from 'react-icons/io';\nimport { MdOutlineOndemandVideo } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nconst SidebarData = [ \n  {\n    title: 'Videos',\n    path: '/trendingvideos',\n    icon: < BsFillPlayBtnFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Channels',\n    path: '/topchannels',\n    icon: < MdOutlineOndemandVideo />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Favorites',\n    path: '/savedvideos',\n    icon: < BsBookmarkHeartFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Logout',\n    path: '/',\n    icon: < BsFillPersonFill />,\n    cName: 'nav-text'\n  },\n];\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(true);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  var user = sessionStorage.getItem('userInfo');\n\n  console.log(user);\n\n\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navigation'>\n        <nav className='nav-menu'>\n          <ul className='nav-menu-items'>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n        <h6 class=\"white-text\">Logged in as: <br></br> <u>{user}</u></h6>\n        </div>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/LikeButton.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/FavoritedHeader.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './FavoritedHeader.css';\nimport HeaderLogo from './HeaderLogo';\nimport SearchBar from './SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass FavoritedHeader extends React.Component {\n\n    render(){\n        return(\n          <div className=\"headerBar\">\n\n            <div className=\"headerLogo\">\n                <HeaderLogo />\n            </div>\n\n            <div className=\"headerExLogo\">\n                <h1 className='pageTitle'>Favorited Videos</h1>\n            </div>\n            \n          </div>\n        )\n    }\n}\n\nexport default FavoritedHeader\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js",["215","216"],"import React from \"react\";\nimport \"./NavbarItem.css\";\nimport navitemLogo from '../images/view-grid@2x.svg';\n\nfunction NavbarItem(props) {\n  const { text, className } = props;\n\n  return (\n    <div className>\n    <div className=\"nav-item\">\n      <img className=\"view-grid\" src={navitemLogo} />\n      <div className=\"text\">{text}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default NavbarItem;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Autocomplete.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":22},{"ruleId":"221","severity":1,"message":"225","line":26,"column":10,"nodeType":"223","messageId":"224","endLine":26,"endColumn":16},{"ruleId":"221","severity":1,"message":"226","line":85,"column":7,"nodeType":"223","messageId":"224","endLine":85,"endColumn":19},{"ruleId":"221","severity":1,"message":"227","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":16},{"ruleId":"221","severity":1,"message":"228","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":13},{"ruleId":"221","severity":1,"message":"229","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":16,"column":17,"nodeType":"223","messageId":"224","endLine":16,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":230,"column":3,"nodeType":"234","messageId":"235","endLine":232,"endColumn":4},{"ruleId":"221","severity":1,"message":"236","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":23},{"ruleId":"221","severity":1,"message":"237","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":17},{"ruleId":"221","severity":1,"message":"238","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":12},{"ruleId":"221","severity":1,"message":"222","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":22},{"ruleId":"221","severity":1,"message":"239","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":19},{"ruleId":"221","severity":1,"message":"240","line":12,"column":10,"nodeType":"223","messageId":"224","endLine":12,"endColumn":18},{"ruleId":"221","severity":1,"message":"241","line":17,"column":3,"nodeType":"223","messageId":"224","endLine":17,"endColumn":6},{"ruleId":"221","severity":1,"message":"242","line":18,"column":3,"nodeType":"223","messageId":"224","endLine":18,"endColumn":6},{"ruleId":"221","severity":1,"message":"243","line":21,"column":10,"nodeType":"223","messageId":"224","endLine":21,"endColumn":23},{"ruleId":"221","severity":1,"message":"229","line":23,"column":9,"nodeType":"223","messageId":"224","endLine":23,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":23,"column":17,"nodeType":"223","messageId":"224","endLine":23,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":24,"column":9,"nodeType":"223","messageId":"224","endLine":24,"endColumn":15},{"ruleId":"221","severity":1,"message":"244","line":65,"column":7,"nodeType":"223","messageId":"224","endLine":65,"endColumn":11},{"ruleId":"221","severity":1,"message":"245","line":68,"column":7,"nodeType":"223","messageId":"224","endLine":68,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":186,"column":15,"nodeType":"223","messageId":"248","endLine":186,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":217,"column":35,"nodeType":"251","messageId":"235","endLine":217,"endColumn":37},{"ruleId":"252","severity":1,"message":"253","line":394,"column":21,"nodeType":"254","endLine":395,"endColumn":51},{"ruleId":"221","severity":1,"message":"255","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":20},{"ruleId":"221","severity":1,"message":"256","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":13},{"ruleId":"221","severity":1,"message":"257","line":9,"column":5,"nodeType":"223","messageId":"224","endLine":9,"endColumn":12},{"ruleId":"221","severity":1,"message":"258","line":18,"column":10,"nodeType":"223","messageId":"224","endLine":18,"endColumn":18},{"ruleId":"221","severity":1,"message":"259","line":5,"column":52,"nodeType":"223","messageId":"224","endLine":5,"endColumn":66},{"ruleId":"221","severity":1,"message":"237","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":17},{"ruleId":"221","severity":1,"message":"239","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":19},{"ruleId":"221","severity":1,"message":"260","line":11,"column":8,"nodeType":"223","messageId":"224","endLine":11,"endColumn":18},{"ruleId":"221","severity":1,"message":"227","line":12,"column":8,"nodeType":"223","messageId":"224","endLine":12,"endColumn":16},{"ruleId":"221","severity":1,"message":"229","line":23,"column":9,"nodeType":"223","messageId":"224","endLine":23,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":23,"column":17,"nodeType":"223","messageId":"224","endLine":23,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":24,"column":9,"nodeType":"223","messageId":"224","endLine":24,"endColumn":15},{"ruleId":"221","severity":1,"message":"261","line":27,"column":5,"nodeType":"223","messageId":"224","endLine":27,"endColumn":14},{"ruleId":"221","severity":1,"message":"262","line":4,"column":30,"nodeType":"223","messageId":"224","endLine":4,"endColumn":47},{"ruleId":"221","severity":1,"message":"227","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":16},{"ruleId":"221","severity":1,"message":"229","line":15,"column":9,"nodeType":"223","messageId":"224","endLine":15,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":15,"column":17,"nodeType":"223","messageId":"224","endLine":15,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"263","line":12,"column":7,"nodeType":"223","messageId":"224","endLine":12,"endColumn":16},{"ruleId":"221","severity":1,"message":"264","line":33,"column":9,"nodeType":"223","messageId":"224","endLine":33,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":88,"column":41,"nodeType":"254","endLine":88,"endColumn":83},{"ruleId":"221","severity":1,"message":"267","line":6,"column":22,"nodeType":"223","messageId":"224","endLine":6,"endColumn":27},{"ruleId":"221","severity":1,"message":"268","line":7,"column":10,"nodeType":"223","messageId":"224","endLine":7,"endColumn":14},{"ruleId":"221","severity":1,"message":"269","line":7,"column":16,"nodeType":"223","messageId":"224","endLine":7,"endColumn":25},{"ruleId":"221","severity":1,"message":"270","line":7,"column":27,"nodeType":"223","messageId":"224","endLine":7,"endColumn":36},{"ruleId":"221","severity":1,"message":"271","line":7,"column":38,"nodeType":"223","messageId":"224","endLine":7,"endColumn":44},{"ruleId":"221","severity":1,"message":"272","line":7,"column":46,"nodeType":"223","messageId":"224","endLine":7,"endColumn":50},{"ruleId":"221","severity":1,"message":"273","line":7,"column":52,"nodeType":"223","messageId":"224","endLine":7,"endColumn":60},{"ruleId":"221","severity":1,"message":"274","line":7,"column":62,"nodeType":"223","messageId":"224","endLine":7,"endColumn":71},{"ruleId":"221","severity":1,"message":"275","line":7,"column":73,"nodeType":"223","messageId":"224","endLine":7,"endColumn":81},{"ruleId":"221","severity":1,"message":"276","line":11,"column":5,"nodeType":"223","messageId":"224","endLine":11,"endColumn":15},{"ruleId":"221","severity":1,"message":"229","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":16,"column":17,"nodeType":"223","messageId":"224","endLine":16,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":15},{"ruleId":"221","severity":1,"message":"277","line":18,"column":9,"nodeType":"223","messageId":"224","endLine":18,"endColumn":20},{"ruleId":"221","severity":1,"message":"278","line":20,"column":7,"nodeType":"223","messageId":"224","endLine":20,"endColumn":17},{"ruleId":"221","severity":1,"message":"279","line":11,"column":9,"nodeType":"223","messageId":"224","endLine":11,"endColumn":21},{"ruleId":"221","severity":1,"message":"240","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"280","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":26},{"ruleId":"221","severity":1,"message":"281","line":2,"column":28,"nodeType":"223","messageId":"224","endLine":2,"endColumn":40},{"ruleId":"221","severity":1,"message":"282","line":2,"column":42,"nodeType":"223","messageId":"224","endLine":2,"endColumn":57},{"ruleId":"221","severity":1,"message":"283","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":18},{"ruleId":"221","severity":1,"message":"284","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":13},{"ruleId":"221","severity":1,"message":"285","line":4,"column":15,"nodeType":"223","messageId":"224","endLine":4,"endColumn":22},{"ruleId":"221","severity":1,"message":"286","line":4,"column":24,"nodeType":"223","messageId":"224","endLine":4,"endColumn":31},{"ruleId":"221","severity":1,"message":"287","line":5,"column":9,"nodeType":"223","messageId":"224","endLine":5,"endColumn":13},{"ruleId":"221","severity":1,"message":"288","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":18},{"ruleId":"221","severity":1,"message":"267","line":6,"column":22,"nodeType":"223","messageId":"224","endLine":6,"endColumn":27},{"ruleId":"221","severity":1,"message":"289","line":7,"column":10,"nodeType":"223","messageId":"224","endLine":7,"endColumn":23},{"ruleId":"221","severity":1,"message":"290","line":7,"column":25,"nodeType":"223","messageId":"224","endLine":7,"endColumn":38},{"ruleId":"221","severity":1,"message":"291","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":24},{"ruleId":"221","severity":1,"message":"229","line":26,"column":9,"nodeType":"223","messageId":"224","endLine":26,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":26,"column":17,"nodeType":"223","messageId":"224","endLine":26,"endColumn":28},{"ruleId":"221","severity":1,"message":"292","line":39,"column":7,"nodeType":"223","messageId":"224","endLine":39,"endColumn":19},{"ruleId":"221","severity":1,"message":"293","line":54,"column":10,"nodeType":"223","messageId":"224","endLine":54,"endColumn":19},{"ruleId":"221","severity":1,"message":"294","line":132,"column":9,"nodeType":"223","messageId":"224","endLine":132,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":374,"column":79,"nodeType":"254","endLine":374,"endColumn":121},{"ruleId":"221","severity":1,"message":"240","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":24},{"ruleId":"221","severity":1,"message":"280","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":26},{"ruleId":"221","severity":1,"message":"281","line":4,"column":28,"nodeType":"223","messageId":"224","endLine":4,"endColumn":40},{"ruleId":"221","severity":1,"message":"282","line":4,"column":42,"nodeType":"223","messageId":"224","endLine":4,"endColumn":57},{"ruleId":"221","severity":1,"message":"283","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":18},{"ruleId":"221","severity":1,"message":"285","line":6,"column":15,"nodeType":"223","messageId":"224","endLine":6,"endColumn":22},{"ruleId":"221","severity":1,"message":"286","line":6,"column":24,"nodeType":"223","messageId":"224","endLine":6,"endColumn":31},{"ruleId":"221","severity":1,"message":"287","line":7,"column":9,"nodeType":"223","messageId":"224","endLine":7,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":30,"column":9,"nodeType":"254","endLine":30,"endColumn":45},{"ruleId":"221","severity":1,"message":"295","line":2,"column":13,"nodeType":"223","messageId":"224","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"296","line":4,"column":13,"nodeType":"223","messageId":"224","endLine":4,"endColumn":20},{"ruleId":"221","severity":1,"message":"297","line":40,"column":9,"nodeType":"223","messageId":"224","endLine":40,"endColumn":20},{"ruleId":"221","severity":1,"message":"298","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":17},{"ruleId":"221","severity":1,"message":"267","line":6,"column":22,"nodeType":"223","messageId":"224","endLine":6,"endColumn":27},{"ruleId":"221","severity":1,"message":"268","line":7,"column":10,"nodeType":"223","messageId":"224","endLine":7,"endColumn":14},{"ruleId":"221","severity":1,"message":"269","line":7,"column":16,"nodeType":"223","messageId":"224","endLine":7,"endColumn":25},{"ruleId":"221","severity":1,"message":"270","line":7,"column":27,"nodeType":"223","messageId":"224","endLine":7,"endColumn":36},{"ruleId":"221","severity":1,"message":"271","line":7,"column":38,"nodeType":"223","messageId":"224","endLine":7,"endColumn":44},{"ruleId":"221","severity":1,"message":"272","line":7,"column":46,"nodeType":"223","messageId":"224","endLine":7,"endColumn":50},{"ruleId":"221","severity":1,"message":"273","line":7,"column":52,"nodeType":"223","messageId":"224","endLine":7,"endColumn":60},{"ruleId":"221","severity":1,"message":"274","line":7,"column":62,"nodeType":"223","messageId":"224","endLine":7,"endColumn":71},{"ruleId":"221","severity":1,"message":"275","line":7,"column":73,"nodeType":"223","messageId":"224","endLine":7,"endColumn":81},{"ruleId":"221","severity":1,"message":"276","line":11,"column":5,"nodeType":"223","messageId":"224","endLine":11,"endColumn":15},{"ruleId":"221","severity":1,"message":"229","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"230","line":16,"column":17,"nodeType":"223","messageId":"224","endLine":16,"endColumn":28},{"ruleId":"221","severity":1,"message":"231","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":15},{"ruleId":"221","severity":1,"message":"277","line":18,"column":9,"nodeType":"223","messageId":"224","endLine":18,"endColumn":20},{"ruleId":"221","severity":1,"message":"278","line":20,"column":7,"nodeType":"223","messageId":"224","endLine":20,"endColumn":17},{"ruleId":"221","severity":1,"message":"299","line":6,"column":17,"nodeType":"223","messageId":"224","endLine":6,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":11,"column":7,"nodeType":"254","endLine":11,"endColumn":54},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'VideoThumbnail' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'handleChange' is assigned a value but never used.","'loadIcon' is defined but never used.","'axios' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'handleLanguageChange'.","MethodDefinition","unexpected","'getHomeVideos' is defined but never used.","'HeaderBar' is defined but never used.","'Grid' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ControlFilled' is defined but never used.","'data' is assigned a value but never used.","'geoMapData' is assigned a value but never used.","no-redeclare","'slicedString' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useReducer' is defined but never used.","'image' is defined but never used.","'clicked' is assigned a value but never used.","'passWord' is assigned a value but never used.","'getSingleVideo' is defined but never used.","'LikeButton' is defined but never used.","'linkBegin' is assigned a value but never used.","'getTrendingVideos' is defined but never used.","'prototype' is assigned a value but never used.","'days' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Space' is defined but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Pagination' is defined but never used.","'RangePicker' is assigned a value but never used.","'IconSlider' is assigned a value but never used.","'errorHandler' is assigned a value but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'NavbarItem' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'HeaderLogo' is defined but never used.","'FrownOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'customFormat' is assigned a value but never used.","'tagString' is assigned a value but never used.","'changeTagString' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'showSidebar' is assigned a value but never used.","'SearchBar' is defined but never used.","'className' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]